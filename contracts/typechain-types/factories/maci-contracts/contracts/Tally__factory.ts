/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type {
  Tally,
  TallyInterface,
} from "../../../maci-contracts/contracts/Tally";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vkRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poll",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mp",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AllBallotsTallied",
    type: "error",
  },
  {
    inputs: [],
    name: "BatchStartIndexTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTallyVotesProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NumSignUpsTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessingNotComplete",
    type: "error",
  },
  {
    inputs: [],
    name: "TallyBatchSizeTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
    ],
    name: "genTallyVotesPackedVals",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
    ],
    name: "genTallyVotesPublicInputHash",
    outputs: [
      {
        internalType: "uint256",
        name: "inputHash",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "isTallied",
    outputs: [
      {
        internalType: "bool",
        name: "tallied",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageProcessor",
    outputs: [
      {
        internalType: "contract IMessageProcessor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poll",
    outputs: [
      {
        internalType: "contract IPoll",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyBatchNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "tallyVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSbCommitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spent",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_spentProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_spentSalt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultCommitment",
        type: "uint256",
      },
    ],
    name: "verifyPerVOSpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSpentSalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
    ],
    name: "verifySpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
    ],
    name: "verifyTallyProof",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyResult",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_tallyResultProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_tallyResultSalt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
    ],
    name: "verifyTallyResult",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vkRegistry",
    outputs: [
      {
        internalType: "contract IVkRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61010060405260405162002009380380620020098339810160408190526200002791620000c2565b620000323362000055565b6001600160a01b0393841660805291831660a052821660c0521660e0526200011f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000bd57600080fd5b919050565b60008060008060808587031215620000d957600080fd5b620000e485620000a5565b9350620000f460208601620000a5565b92506200010460408601620000a5565b91506200011460608601620000a5565b905092959194509250565b60805160a05160c05160e051611e63620001a660003960008181610359015281816103e3015261048c0152600081816102f00152818161051f0152818161054f0152818161061e0152818161099c01528181610a2601528181610d9c0152610e250152600081816101a50152610aae0152600081816102010152610bdd0152611e636000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063715018a6116100de578063afb93bd311610097578063d0380fe211610071578063d0380fe214610354578063d13181b81461037b578063e3ff760614610384578063f2fde38b1461038c57600080fd5b8063afb93bd314610325578063b03698f21461032e578063bea140b31461034157600080fd5b8063715018a6146102ac5780637485dba1146102b45780638da5cb5b146102c75780639cfced97146102d8578063a1175279146102eb578063a21fb5111461031257600080fd5b80633dfb88b2116101305780633dfb88b21461023657806358bfc379146102575780635bb939951461026a578063617502931461027d57806362a361bb146102865780636b148b601461029957600080fd5b806310bc5f511461017857806313fb8932146101a057806316425eeb146101df57806323e3feb1146101e95780632b7ac3f3146101fc5780632d966bf414610223575b600080fd5b61018b61018636600461121f565b61039f565b60405190151581526020015b60405180910390f35b6101c77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610197565b6101e76103d9565b005b6101e76101f7366004611263565b610512565b6101c77f000000000000000000000000000000000000000000000000000000000000000081565b61018b6102313660046112b0565b6106e9565b6102496102443660046113f9565b61073c565b604051908152602001610197565b61024961026536600461149b565b6107bd565b610249610278366004611526565b610857565b61024960015481565b610249610294366004611548565b61087c565b6102496102a736600461121f565b6108b6565b6101e7610983565b61018b6102c23660046115a8565b610995565b6000546001600160a01b03166101c7565b6102496102e63660046115f0565b610c66565b6101c77f000000000000000000000000000000000000000000000000000000000000000081565b61018b6103203660046112b0565b610ca0565b61024960025481565b61024961033c36600461162b565b610cd6565b61024961034f366004611657565b610d5d565b6101c77f000000000000000000000000000000000000000000000000000000000000000081565b61024960035481565b61018b610d97565b6101e761039a3660046116c5565b610ec9565b60006103a96111c5565b8381526103b68686610857565b6020820152604081018390526001546103ce82610d5d565b149695505050505050565b6103e1610f47565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638763d0c46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561043f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046391906116ff565b6104805760405163f13e1b8560e01b815260040160405180910390fd5b600354600003610510577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d13181b86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c9190611721565b6003555b565b61051a610f47565b6105437f0000000000000000000000000000000000000000000000000000000000000000610fa1565b61054b6103d9565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf919061173a565b505050905060008160056105e39190611893565b90506000816002546105f591906118a2565b60028054600101905560408051634f367f0f60e01b815281519293506000926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692634f367f0f92600480820193918290030181865afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068991906118b9565b5090508082106106ac5760405163b3f8c18960e01b815260040160405180910390fd5b60006106bb868385878b610995565b9050806106db576040516341acf34d60e01b815260040160405180910390fd5b505050600193909355505050565b6000806106f9858b8b8b8b61103e565b90506107036111c5565b838152602081018590526107178288610857565b8160025b602002015260015461072c82610d5d565b149b9a5050505050505050505050565b60405163248f667760e01b815260009073__$e61c65d9562aef5fa6ab22c0f787cf1e30$__9063248f6677906107769085906004016118dd565b602060405180830381865af4158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190611721565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016002836040516020016107f3919061190e565b60408051601f198184030181529082905261080d91611944565b602060405180830381855afa15801561082a573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061084d9190611721565b6107b79190611989565b60006108616111e3565b838152602081018390526108748161087c565b949350505050565b6040516314d2f97b60e11b815260009073__$1540826e134b1b69b7091c82576ee3aadd$__906329a5f2f69061077690859060040161199d565b6000806108c4868686610cd6565b60408051600480825260a08201909252919250600091906020820160808036833701905050905081816000815181106108ff576108ff6116e9565b60200260200101818152505060035481600181518110610921576109216116e9565b60200260200101818152505060015481600281518110610943576109436116e9565b6020026020010181815250508381600381518110610963576109636116e9565b602002602001018181525050610978816107bd565b979650505050505050565b61098b610f47565b6105106000611175565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156109f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1c919061173a565b93505050915060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bc14ee2b6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa691906119c5565b5050905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c7c8beec836001600160a01b031663652c76e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611a12565b6040516001600160e01b031960e084901b16815260ff918216600482015281881660248201529086166044820152606401600060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bb39190810190611ae4565b90506000610bc38a8a8a8a6108b6565b6040516308adcb2560e21b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322b72c9490610c16908e9086908690600401611c42565b602060405180830381865afa158015610c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5791906116ff565b9b9a5050505050505050505050565b604051630926f44b60e31b815260009073__$46fbdf6658faf65265971bdad66851b86c$__90634937a25890610776908590600401611d1a565b600080610cb0858b8b8b8b61103e565b9050610cba6111c5565b610cc48288610857565b8152602081018590528381600261071b565b6000600160321b8410610cfc57604051631805864f60e21b815260040160405180910390fd5b600160321b8310610d20576040516334dd29a960e21b815260040160405180910390fd5b600160321b8210610d445760405163cdc3c16b60e01b815260040160405180910390fd5b603284901b610d538385611d42565b6108749190611d56565b6040516304b98e1d60e31b815260009073__$fa059fb1da6d850ca47ea49359bfe89f78$";

type TallyConstructorParams =
  | [linkLibraryAddresses: TallyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TallyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Tally__factory extends ContractFactory {
  constructor(...args: TallyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Tally__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TallyLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e61c65d9562aef5fa6ab22c0f787cf1e30\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1540826e134b1b69b7091c82576ee3aadd\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$46fbdf6658faf65265971bdad66851b86c\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$fa059fb1da6d850ca47ea49359bfe89f78\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _vkRegistry: AddressLike,
    _poll: AddressLike,
    _mp: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _vkRegistry,
      _poll,
      _mp,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _vkRegistry: AddressLike,
    _poll: AddressLike,
    _mp: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _vkRegistry,
      _poll,
      _mp,
      overrides || {}
    ) as Promise<
      Tally & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Tally__factory {
    return super.connect(runner) as Tally__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TallyInterface {
    return new Interface(_abi) as TallyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Tally {
    return new Contract(address, _abi, runner) as unknown as Tally;
  }
}

export interface TallyLibraryAddresses {
  ["maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
