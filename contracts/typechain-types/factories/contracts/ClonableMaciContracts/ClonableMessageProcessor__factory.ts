/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ClonableMessageProcessor,
  ClonableMessageProcessorInterface,
} from "../../../contracts/ClonableMaciContracts/ClonableMessageProcessor";

const _abi = [
  {
    inputs: [],
    name: "BatchEndIndexTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "CurrentMessageBatchIndexTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidProcessMessageProof",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxVoteOptionsTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageAqNotMerged",
    type: "error",
  },
  {
    inputs: [],
    name: "NoMoreMessages",
    type: "error",
  },
  {
    inputs: [],
    name: "NumSignUpsTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "StateAqNotMerged",
    type: "error",
  },
  {
    inputs: [],
    name: "VkNotSet",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "currentMessageBatchIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currentMessageBatchIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numMessages",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_messageTreeSubDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
    ],
    name: "genProcessMessagesPackedVals",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_currentMessageBatchIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_messageRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numMessages",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_currentSbCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newSbCommitment",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_messageTreeSubDepth",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
    ],
    name: "genProcessMessagesPublicInputHash",
    outputs: [
      {
        internalType: "uint256",
        name: "inputHash",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vkRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poll",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numBatchesProcessed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poll",
    outputs: [
      {
        internalType: "contract IPoll",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newSbCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "processMessages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "processingComplete",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vkRegistry",
    outputs: [
      {
        internalType: "contract IVkRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611eee806100206000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638763d0c4116100ad578063bea140b311610071578063bea140b314610264578063c0c53b8b14610277578063d13181b81461028a578063d1849f4814610293578063f2fde38b146102a657600080fd5b80638763d0c4146101fd5780638da5cb5b1461021a5780639cfced971461022b578063a11752791461023e578063b1a263d31461025157600080fd5b806358bfc379116100f457806358bfc379146101b15780635bb93995146101c457806362a361bb146101d7578063715018a6146101ea5780637a38d18f146101f457600080fd5b80630cd3b91d1461013157806313fb8932146101575780632b7ac3f3146101825780633d6528a1146101955780633dfb88b21461019e575b600080fd5b61014461013f3660046112e6565b6102b9565b6040519081526020015b60405180910390f35b606b5461016a906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b606a5461016a906001600160a01b031681565b61014460675481565b6101446101ac3660046113ec565b6104c0565b6101446101bf36600461148e565b610541565b6101446101d2366004611524565b6105db565b6101446101e5366004611546565b610600565b6101f261063a565b005b61014460665481565b60655461020a9060ff1681565b604051901515815260200161014e565b6033546001600160a01b031661016a565b6101446102393660046115a6565b61064e565b60695461016a906001600160a01b031681565b6101f261025f3660046115e1565b610688565b61014461027236600461166d565b610b43565b6101f26102853660046116db565b610b7d565b61014460685481565b6101446102a1366004611726565b610cdb565b6101f26102b436600461177c565b610ddc565b600080606960009054906101000a90046001600160a01b03166001600160a01b0316638aa0ba926040518163ffffffff1660e01b8152600401602060405180830381865afa15801561030f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033391906117a0565b905060006103448b8a8a8888610cdb565b60695460408051634909229f60e01b8152815193945060009384936001600160a01b031692634909229f92600480820193918290030181865afa15801561038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b391906117b9565b60408051600680825260e08201909252929450909250600091906020820160c08036833701905050905083816000815181106103f1576103f16117dd565b6020026020010181815250508481600181518110610411576104116117dd565b6020026020010181815250508c81600281518110610431576104316117dd565b6020026020010181815250508981600381518110610451576104516117dd565b6020026020010181815250508881600481518110610471576104716117dd565b60209081029190910101526104868284611809565b81600581518110610499576104996117dd565b6020026020010181815250506104ae81610541565b9e9d5050505050505050505050505050565b60405163248f667760e01b815260009073__$e61c65d9562aef5fa6ab22c0f787cf1e30$__9063248f6677906104fa90859060040161181c565b602060405180830381865af4158015610517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053b91906117a0565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001600283604051602001610577919061184d565b60408051601f198184030181529082905261059191611883565b602060405180830381855afa1580156105ae573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105d191906117a0565b61053b91906118b2565b60006105e56112b9565b838152602081018390526105f881610600565b949350505050565b6040516314d2f97b60e11b815260009073__$1540826e134b1b69b7091c82576ee3aadd$__906329a5f2f6906104fa9085906004016118d4565b610642610e55565b61064c6000610eaf565b565b604051630926f44b60e31b815260009073__$46fbdf6658faf65265971bdad66851b86c$__90634937a258906104fa9085906004016118fc565b610690610e55565b6069546106a5906001600160a01b0316610f01565b60655460ff16156106c95760405163a7f0397560e01b815260040160405180910390fd5b606960009054906101000a90046001600160a01b03166001600160a01b031663b5f38c816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107409190611924565b61075d57604051631bb80bef60e31b815260040160405180910390fd5b6000806000606960009054906101000a90046001600160a01b03166001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa1580156107b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d99190611946565b9350935093505060008360056107ef9190611a89565b90506000606960009054906101000a90046001600160a01b03166001600160a01b031663bc14ee2b6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a9190611a98565b50604051631b9b8aa760e01b815260ff87166004820152909250600091506001600160a01b03831690631b9b8aa790602401602060405180830381865afa1580156108b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108dd91906117a0565b9050806000036109005760405163c0b868a560e01b815260040160405180910390fd5b606654600003610a4c576069546040805163c17268d960e01b815290516000926001600160a01b03169163c17268d99160048083019260209291908290030181865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097891906117a0565b606881905560695460408051634f367f0f60e01b815281519394506000936001600160a01b0390931692634f367f0f926004808401939192918290030181865afa1580156109ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ee91906117b9565b9150600090506109fe86836118b2565b606783905590508115610a485780600003610a30578560676000828254610a259190611ada565b90915550610a489050565b8060676000828254610a429190611ada565b90915550505b5050505b610a60606754826068548b8a8a8a8e610f98565b610a805760405160016268f24f60e01b0319815260040160405180910390fd5b60695460408051634f367f0f60e01b815281516000936001600160a01b031692634f367f0f92600480820193918290030181865afa158015610ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aea91906117b9565b91505060006067541115610b10578360676000828254610b0a9190611ada565b90915550505b610b38896067546066546001610b269190611809565b610b309088611aed565b841115611230565b505050505050505050565b6040516304b98e1d60e31b815260009073__$fa059fb1da6d850ca47ea49359bfe89f78$__906325cc70e8906104fa908590600401611b04565b600054610100900460ff1615808015610b9d5750600054600160ff909116105b80610bb75750303b158015610bb7575060005460ff166001145b610c1f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610c42576000805461ff0019166101001790555b610c4a611262565b610c52611289565b606a80546001600160a01b038087166001600160a01b031992831617909255606b805486841690831617905560698054928516929091169190911790558015610cd5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b600080610ce9836005611a89565b90506000610cf8856005611a89565b90506000610d06828a611809565b905086811115610d135750855b600160321b8310610d375760405163df0dbdbd60e01b815260040160405180910390fd5b600160321b8810610d5b57604051631805864f60e21b815260040160405180910390fd5b600160321b8910610d7f576040516328b2660560e21b815260040160405180910390fd5b600160321b8110610da3576040516309c5b7c360e21b815260040160405180910390fd5b609681901b60648a901b610dbb60328b901b86611809565b610dc59190611809565b610dcf9190611809565b9998505050505050505050565b610de4610e55565b6001600160a01b038116610e495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610c16565b610e5281610eaf565b50565b6033546001600160a01b0316331461064c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610c16565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080826001600160a01b0316634909229f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610f41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6591906117b9565b90925090506000610f768342611ada565b9050818111610cd557604051635c3017c560e11b815260040160405180910390fd5b6000806000606960009054906101000a90046001600160a01b03166001600160a01b0316634f367f0f6040518163ffffffff1660e01b81526004016040805180830381865afa158015610fef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101391906117b9565b915091506000606960009054906101000a90046001600160a01b03166001600160a01b031663bc14ee2b6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110909190611a98565b5050905060006110a68d8d86868f8f8f8e6102b9565b90506000606b60009054906101000a90046001600160a01b03166001600160a01b0316630bfbd4fe846001600160a01b031663652c76e46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561110c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111309190611b2c565b8b8b61113d8f6005611a89565b6040516001600160e01b031960e087901b16815260ff94851660048201529284166024840152921660448201526064810191909152608401600060405180830381865afa158015611192573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111ba9190810190611bfe565b606a546040516308adcb2560e21b81529192506001600160a01b0316906322b72c94906111ef908a9085908790600401611d5c565b602060405180830381865afa15801561120c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190611924565b60688390556065805460ff191682151517905560678290556066805490600061125883611e54565b9190505550505050565b600054610100900460ff1661064c5760405162461bcd60e51b8152600401610c1690611e6d565b600054610100900460ff166112b05760405162461bcd60e51b8152600401610c1690611e6d565b61064c33610eaf565b60405180604001604052806002906020820280368337509192915050565b60ff81168114610e5257600080fd5b600080600080600080600080610100898b03121561130357600080fd5b883597506020890135965060408901359550606089013594506080890135935060a0890135925060c0890135611338816112d7565b915060e0890135611348816112d7565b809150509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561139257611392611359565b60405290565b60405160a0810167ffffffffffffffff8111828210171561139257611392611359565b604051601f8201601f1916810167ffffffffffffffff811182821017156113e4576113e4611359565b604052919050565b6000608082840312156113fe57600080fd5b82601f83011261140d57600080fd5b6040516080810181811067ffffffffffffffff8211171561143057611430611359565b60405280608084018581111561144557600080fd5b845b8181101561145f578035835260209283019201611447565b509195945050505050565b600067ffffffffffffffff82111561148457611484611359565b5060051b60200190565b600060208083850312156114a157600080fd5b823567ffffffffffffffff8111156114b857600080fd5b8301601f810185136114c957600080fd5b80356114dc6114d78261146a565b6113bb565b81815260059190911b820183019083810190878311156114fb57600080fd5b928401925b8284101561151957833582529284019290840190611500565b979650505050505050565b6000806040838503121561153757600080fd5b50508035926020909101359150565b60006040828403121561155857600080fd5b82601f83011261156757600080fd5b61156f61136f565b80604084018581111561158157600080fd5b845b8181101561159b578035845260209384019301611583565b509095945050505050565b600060a082840312156115b857600080fd5b82601f8301126115c757600080fd5b6115cf611398565b8060a084018581111561158157600080fd5b6000806101208084860312156115f657600080fd5b83359250602085603f86011261160b57600080fd5b604051610100810181811067ffffffffffffffff8211171561162f5761162f611359565b60405291850191808784111561164457600080fd5b8287015b8481101561165f5780358252908301908301611648565b509497909650945050505050565b60006060828403121561167f57600080fd5b82601f83011261168e57600080fd5b6040516060810181811067ffffffffffffffff821117156116b1576116b1611359565b60405280606084018581111561144557600080fd5b6001600160a01b0381168114610e5257600080fd5b6000806000606084860312156116f057600080fd5b83356116fb816116c6565b9250602084013561170b816116c6565b9150604084013561171b816116c6565b809150509250925092565b600080600080600060a0868803121561173e57600080fd5b853594506020860135935060408601359250606086013561175e816112d7565b9150608086013561176e816112d7565b809150509295509295909350565b60006020828403121561178e57600080fd5b8135611799816116c6565b9392505050565b6000602082840312156117b257600080fd5b5051919050565b600080604083850312156117cc57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561053b5761053b6117f3565b60808101818360005b6004811015611844578151835260209283019290910190600101611825565b50505092915050565b815160009082906020808601845b838110156118775781518552938201939082019060010161185b565b50929695505050505050565b6000825160005b818110156118a4576020818601810151858301520161188a565b506000920191825250919050565b6000826118cf57634e487b7160e01b600052601260045260246000fd5b500690565b60408101818360005b60028110156118445781518352602092830192909101906001016118dd565b60a08101818360005b6005811015611844578151835260209283019290910190600101611905565b60006020828403121561193657600080fd5b8151801515811461179957600080fd5b6000806000806080858703121561195c57600080fd5b8451611967816112d7565b6020860151909450611978816112d7565b6040860151909350611989816112d7565b606086015190925061199a816112d7565b939692955090935050565b600181815b808511156119e05781600019048211156119c6576119c66117f3565b808516156119d357918102915b93841c93908002906119aa565b509250929050565b6000826119f75750600161053b565b81611a045750600061053b565b8160018114611a1a5760028114611a2457611a40565b600191505061053b565b60ff841115611a3557611a356117f3565b50506001821b61053b565b5060208310610133831016604e8410600b8410161715611a63575081810a61053b565b611a6d83836119a5565b8060001904821115611a8157611a816117f3565b029392505050565b600061179960ff8416836119e8565b600080600060608486031215611aad57600080fd5b8351611ab8816116c6565b6020850151909350611ac9816116c6565b604085015190925061171b816116c6565b8181038181111561053b5761053b6117f3565b808202811582820484141761053b5761053b6117f3565b60608101818360005b6003811015611844578151835260209283019290910190600101611b0d565b600060208284031215611b3e57600080fd5b8151611799816112d7565b600060408284031215611b5b57600080fd5b611b6361136f565b9050815181526020820151602082015292915050565b600082601f830112611b8a57600080fd5b611b9261136f565b806040840185811115611ba457600080fd5b845b8181101561159b578051845260209384019301611ba6565b600060808284031215611bd057600080fd5b611bd861136f565b9050611be48383611b79565b8152611bf38360408401611b79565b602082015292915050565b60006020808385031215611c1157600080fd5b825167ffffffffffffffff80821115611c2957600080fd5b908401906101e08287031215611c3e57600080fd5b611c46611398565b611c508784611b49565b81526040611c6088828601611bbe565b85830152611c718860c08601611bbe565b81830152611c83886101408601611bbe565b60608301526101c084015183811115611c9b57600080fd5b80850194505087601f850112611cb057600080fd5b83519250611cc06114d78461146a565b83815260069390931b84018501928581019089851115611cdf57600080fd5b948601945b84861015611d0557611cf68a87611b49565b82529482019490860190611ce4565b60808401525090979650505050505050565b8060005b6002811015610cd5578151845260209384019390910190600101611d1b565b611d45828251611d17565b6020810151611d576040840182611d17565b505050565b60006101408286835b6008811015611d84578151835260209283019290910190600101611d65565b505050806101008401526103208301611daa828501875180518252602090810151910152565b6020915081860151611dc0610180860182611d3a565b50604080870151611dd5610200870182611d3a565b506060870151611de9610280870182611d3a565b5060808701516101e06103008701528051928390528301916000906103408701905b80831015611e3c57611e2882865180518252602090810151910152565b938501936001929092019190830190611e0b565b50809550505050505082610120830152949350505050565b600060018201611e6657611e666117f3565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220a9339ba4ddc6b8c8c6c5e1b39329e25ba47040ddccf99e3c8680ca458690ac7764736f6c63430008130033";

type ClonableMessageProcessorConstructorParams =
  | [
      linkLibraryAddresses: ClonableMessageProcessorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClonableMessageProcessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ClonableMessageProcessor__factory extends ContractFactory {
  constructor(...args: ClonableMessageProcessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClonableMessageProcessor__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClonableMessageProcessorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e61c65d9562aef5fa6ab22c0f787cf1e30\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1540826e134b1b69b7091c82576ee3aadd\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$46fbdf6658faf65265971bdad66851b86c\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$fa059fb1da6d850ca47ea49359bfe89f78\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ClonableMessageProcessor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ClonableMessageProcessor__factory {
    return super.connect(runner) as ClonableMessageProcessor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClonableMessageProcessorInterface {
    return new Interface(_abi) as ClonableMessageProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ClonableMessageProcessor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ClonableMessageProcessor;
  }
}

export interface ClonableMessageProcessorLibraryAddresses {
  ["maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
