/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ClonableTally,
  ClonableTallyInterface,
} from "../../../contracts/ClonableMaciContracts/ClonableTally";

const _abi = [
  {
    inputs: [],
    name: "AllBallotsTallied",
    type: "error",
  },
  {
    inputs: [],
    name: "BatchStartIndexTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTallyVotesProof",
    type: "error",
  },
  {
    inputs: [],
    name: "NumSignUpsTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "ProcessingNotComplete",
    type: "error",
  },
  {
    inputs: [],
    name: "TallyBatchSizeTooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingPeriodNotPassed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
    ],
    name: "genTallyVotesPackedVals",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
    ],
    name: "genTallyVotesPublicInputHash",
    outputs: [
      {
        internalType: "uint256",
        name: "inputHash",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "array",
        type: "uint256[2]",
      },
    ],
    name: "hash2",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[3]",
        name: "array",
        type: "uint256[3]",
      },
    ],
    name: "hash3",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "array",
        type: "uint256[4]",
      },
    ],
    name: "hash4",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[5]",
        name: "array",
        type: "uint256[5]",
      },
    ],
    name: "hash5",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vkRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poll",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mp",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isTallied",
    outputs: [
      {
        internalType: "bool",
        name: "tallied",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageProcessor",
    outputs: [
      {
        internalType: "contract IMessageProcessor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poll",
    outputs: [
      {
        internalType: "contract IPoll",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sbCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "array",
        type: "uint256[]",
      },
    ],
    name: "sha256Hash",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyBatchNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tallyCommitment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "tallyVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSbCommitment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_spent",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_spentProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_spentSalt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultCommitment",
        type: "uint256",
      },
    ],
    name: "verifyPerVOSpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSpentSalt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_resultCommitment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
    ],
    name: "verifySpentVoiceCredits",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
      {
        internalType: "uint256",
        name: "_numSignUps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_batchStartIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyBatchSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newTallyCommitment",
        type: "uint256",
      },
    ],
    name: "verifyTallyProof",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteOptionIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tallyResult",
        type: "uint256",
      },
      {
        internalType: "uint256[][]",
        name: "_tallyResultProof",
        type: "uint256[][]",
      },
      {
        internalType: "uint256",
        name: "_tallyResultSalt",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_voteOptionTreeDepth",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_spentVoiceCreditsHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_perVOSpentVoiceCreditsHash",
        type: "uint256",
      },
    ],
    name: "verifyTallyResult",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vkRegistry",
    outputs: [
      {
        internalType: "contract IVkRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611fe3806100206000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80637485dba1116100de578063b03698f211610097578063d13181b811610071578063d13181b814610346578063e3ff76061461034f578063f2fde38b14610357578063f8c8765e1461036a57600080fd5b8063b03698f21461030d578063bea140b314610320578063d0380fe21461033357600080fd5b80637485dba1146102a75780638da5cb5b146102ba5780639cfced97146102cb578063a1175279146102de578063a21fb511146102f1578063afb93bd31461030457600080fd5b80633dfb88b21161014b5780636175029311610125578063617502931461027057806362a361bb146102795780636b148b601461028c578063715018a61461029f57600080fd5b80633dfb88b21461022957806358bfc3791461024a5780635bb939951461025d57600080fd5b806310bc5f511461019357806313fb8932146101bb57806316425eeb146101e657806323e3feb1146101f05780632b7ac3f3146102035780632d966bf414610216575b600080fd5b6101a66101a1366004611303565b61037d565b60405190151581526020015b60405180910390f35b6069546101ce906001600160a01b031681565b6040516001600160a01b0390911681526020016101b2565b6101ee6103b7565b005b6101ee6101fe366004611347565b6104da565b6068546101ce906001600160a01b031681565b6101a6610224366004611394565b61066d565b61023c6102373660046114dd565b6106c0565b6040519081526020016101b2565b61023c61025836600461157f565b610741565b61023c61026b36600461160a565b6107db565b61023c60655481565b61023c61028736600461162c565b610800565b61023c61029a366004611303565b61083a565b6101ee610907565b6101a66102b536600461168c565b610919565b6033546001600160a01b03166101ce565b61023c6102d93660046116d4565b610bab565b606a546101ce906001600160a01b031681565b6101a66102ff366004611394565b610be5565b61023c60665481565b61023c61031b36600461170f565b610c1b565b61023c61032e36600461173b565b610ca2565b606b546101ce906001600160a01b031681565b61023c60675481565b6101a6610cdc565b6101ee6103653660046117a9565b610ded565b6101ee6103783660046117cd565b610e6b565b60006103876112a9565b83815261039486866107db565b6020820152604081018390526065546103ac82610ca2565b149695505050505050565b6103bf610fd2565b606b60009054906101000a90046001600160a01b03166001600160a01b0316638763d0c46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610436919061183f565b6104535760405163f13e1b8560e01b815260040160405180910390fd5b6067546000036104d857606b60009054906101000a90046001600160a01b03166001600160a01b031663d13181b86040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190611861565b6067555b565b6104e2610fd2565b606a546104f7906001600160a01b031661102c565b6104ff6103b7565b606a546040805163ac98e5df60e01b815290516000926001600160a01b03169163ac98e5df9160048083019260809291908290030181865afa158015610549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056d919061187a565b5050509050600081600561058191906119c8565b905060008160665461059391906119d7565b606680546001019055606a5460408051634f367f0f60e01b815281519394506000936001600160a01b0390931692634f367f0f926004808401939192918290030181865afa1580156105e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060d91906119ee565b5090508082106106305760405163b3f8c18960e01b815260040160405180910390fd5b600061063f868385878b610919565b90508061065f576040516341acf34d60e01b815260040160405180910390fd5b505050606593909355505050565b60008061067d858b8b8b8b6110c9565b90506106876112a9565b8381526020810185905261069b82886107db565b8160025b60200201526065546106b082610ca2565b149b9a5050505050505050505050565b60405163248f667760e01b815260009073__$e61c65d9562aef5fa6ab22c0f787cf1e30$__9063248f6677906106fa908590600401611a12565b602060405180830381865af4158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190611861565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016002836040516020016107779190611a43565b60408051601f198184030181529082905261079191611a79565b602060405180830381855afa1580156107ae573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906107d19190611861565b61073b9190611abe565b60006107e56112c7565b838152602081018390526107f881610800565b949350505050565b6040516314d2f97b60e11b815260009073__$1540826e134b1b69b7091c82576ee3aadd$__906329a5f2f6906106fa908590600401611ad2565b600080610848868686610c1b565b60408051600480825260a082019092529192506000919060208201608080368337019050509050818160008151811061088357610883611829565b602002602001018181525050606754816001815181106108a5576108a5611829565b602002602001018181525050606554816002815181106108c7576108c7611829565b60200260200101818152505083816003815181106108e7576108e7611829565b6020026020010181815250506108fc81610741565b979650505050505050565b61090f610fd2565b6104d86000611200565b6000806000606a60009054906101000a90046001600160a01b03166001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610995919061187a565b9350505091506000606a60009054906101000a90046001600160a01b03166001600160a01b031663bc14ee2b6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156109f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a149190611afa565b505090506000606960009054906101000a90046001600160a01b03166001600160a01b031663c7c8beec836001600160a01b031663652c76e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa09190611b47565b6040516001600160e01b031960e084901b16815260ff918216600482015281881660248201529086166044820152606401600060405180830381865afa158015610aee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b169190810190611c19565b90506000610b268a8a8a8a61083a565b6068546040516308adcb2560e21b81529192506001600160a01b0316906322b72c9490610b5b908e9086908690600401611d77565b602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c919061183f565b9b9a5050505050505050505050565b604051630926f44b60e31b815260009073__$46fbdf6658faf65265971bdad66851b86c$__90634937a258906106fa908590600401611e4f565b600080610bf5858b8b8b8b6110c9565b9050610bff6112a9565b610c0982886107db565b8152602081018590528381600261069f565b6000600160321b8410610c4157604051631805864f60e21b815260040160405180910390fd5b600160321b8310610c65576040516334dd29a960e21b815260040160405180910390fd5b600160321b8210610c895760405163cdc3c16b60e01b815260040160405180910390fd5b603284901b610c988385611e77565b6107f89190611e8b565b6040516304b98e1d60e31b815260009073__$fa059fb1da6d850ca47ea49359bfe89f78$__906325cc70e8906106fa908590600401611e9e565b600080606a60009054906101000a90046001600160a01b03166001600160a01b031663ac98e5df6040518163ffffffff1660e01b8152600401608060405180830381865afa158015610d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d56919061187a565b5050606a5460408051634f367f0f60e01b815281519495506000946001600160a01b039093169350634f367f0f92600480830193928290030181865afa158015610da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc891906119ee565b50905080610dd78360056119c8565b606654610de491906119d7565b10159250505090565b610df5610fd2565b6001600160a01b038116610e5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610e6881611200565b50565b600054610100900460ff1615808015610e8b5750600054600160ff909116105b80610ea55750303b158015610ea5575060005460ff166001145b610f085760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e56565b6000805460ff191660011790558015610f2b576000805461ff0019166101001790555b610f33611252565b610f3b611279565b606880546001600160a01b038088166001600160a01b03199283161790925560698054878416908316179055606a8054868416908316179055606b8054928516929091169190911790558015610fcb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b031633146104d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e56565b600080826001600160a01b0316634909229f6040518163ffffffff1660e01b81526004016040805180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109091906119ee565b909250905060006110a18342611ec6565b90508181116110c357604051635c3017c560e11b815260040160405180910390fd5b50505050565b6000806110d7600587611abe565b905084915060006110e66112e5565b60005b8960ff168160ff1610156111f35760005b60058160ff1610156111bd57848160ff16036111305785838260ff166005811061112657611126611829565b60200201526111ad565b848160ff16111561114d57611146600182611ed9565b9350611151565b8093505b87878360ff1681811061116657611166611829565b90506020028101906111789190611ef2565b8560ff1681811061118b5761118b611829565b90506020020135838260ff16600581106111a7576111a7611829565b60200201525b6111b681611f43565b90506110fa565b506111c960058a611e77565b98506111d660058a611abe565b93506111e182610bab565b94506111ec81611f43565b90506110e9565b5050505095945050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166104d85760405162461bcd60e51b8152600401610e5690611f62565b600054610100900460ff166112a05760405162461bcd60e51b8152600401610e5690611f62565b6104d833611200565b60405180606001604052806003906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b6040518060a001604052806005906020820280368337509192915050565b6000806000806080858703121561131957600080fd5b5050823594602084013594506040840135936060013592509050565b80610100810183101561073b57600080fd5b600080610120838503121561135b57600080fd5b8235915061136c8460208501611335565b90509250929050565b60ff81168114610e6857600080fd5b803561138f81611375565b919050565b60008060008060008060008060e0898b0312156113b057600080fd5b8835975060208901359650604089013567ffffffffffffffff808211156113d657600080fd5b818b0191508b601f8301126113ea57600080fd5b8135818111156113f957600080fd5b8c60208260051b850101111561140e57600080fd5b6020830198508097505050506060890135935061142d60808a01611384565b925060a0890135915060c089013590509295985092959890939650565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156114835761148361144a565b60405290565b60405160a0810167ffffffffffffffff811182821017156114835761148361144a565b604051601f8201601f1916810167ffffffffffffffff811182821017156114d5576114d561144a565b604052919050565b6000608082840312156114ef57600080fd5b82601f8301126114fe57600080fd5b6040516080810181811067ffffffffffffffff821117156115215761152161144a565b60405280608084018581111561153657600080fd5b845b81811015611550578035835260209283019201611538565b509195945050505050565b600067ffffffffffffffff8211156115755761157561144a565b5060051b60200190565b6000602080838503121561159257600080fd5b823567ffffffffffffffff8111156115a957600080fd5b8301601f810185136115ba57600080fd5b80356115cd6115c88261155b565b6114ac565b81815260059190911b820183019083810190878311156115ec57600080fd5b928401925b828410156108fc578335825292840192908401906115f1565b6000806040838503121561161d57600080fd5b50508035926020909101359150565b60006040828403121561163e57600080fd5b82601f83011261164d57600080fd5b611655611460565b80604084018581111561166757600080fd5b845b81811015611681578035845260209384019301611669565b509095945050505050565b600080600080600061018086880312156116a557600080fd5b6116af8787611335565b9761010087013597506101208701359661014081013596506101600135945092505050565b600060a082840312156116e657600080fd5b82601f8301126116f557600080fd5b6116fd611489565b8060a084018581111561166757600080fd5b60008060006060848603121561172457600080fd5b505081359360208301359350604090920135919050565b60006060828403121561174d57600080fd5b82601f83011261175c57600080fd5b6040516060810181811067ffffffffffffffff8211171561177f5761177f61144a565b60405280606084018581111561153657600080fd5b6001600160a01b0381168114610e6857600080fd5b6000602082840312156117bb57600080fd5b81356117c681611794565b9392505050565b600080600080608085870312156117e357600080fd5b84356117ee81611794565b935060208501356117fe81611794565b9250604085013561180e81611794565b9150606085013561181e81611794565b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561185157600080fd5b815180151581146117c657600080fd5b60006020828403121561187357600080fd5b5051919050565b6000806000806080858703121561189057600080fd5b845161189b81611375565b60208601519094506118ac81611375565b60408601519093506118bd81611375565b606086015190925061181e81611375565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561191f578160001904821115611905576119056118ce565b8085161561191257918102915b93841c93908002906118e9565b509250929050565b6000826119365750600161073b565b816119435750600061073b565b816001811461195957600281146119635761197f565b600191505061073b565b60ff841115611974576119746118ce565b50506001821b61073b565b5060208310610133831016604e8410600b84101617156119a2575081810a61073b565b6119ac83836118e4565b80600019048211156119c0576119c06118ce565b029392505050565b60006117c660ff841683611927565b808202811582820484141761073b5761073b6118ce565b60008060408385031215611a0157600080fd5b505080516020909101519092909150565b60808101818360005b6004811015611a3a578151835260209283019290910190600101611a1b565b50505092915050565b815160009082906020808601845b83811015611a6d57815185529382019390820190600101611a51565b50929695505050505050565b6000825160005b81811015611a9a5760208186018101518583015201611a80565b506000920191825250919050565b634e487b7160e01b600052601260045260246000fd5b600082611acd57611acd611aa8565b500690565b60408101818360005b6002811015611a3a578151835260209283019290910190600101611adb565b600080600060608486031215611b0f57600080fd5b8351611b1a81611794565b6020850151909350611b2b81611794565b6040850151909250611b3c81611794565b809150509250925092565b600060208284031215611b5957600080fd5b81516117c681611375565b600060408284031215611b7657600080fd5b611b7e611460565b9050815181526020820151602082015292915050565b600082601f830112611ba557600080fd5b611bad611460565b806040840185811115611bbf57600080fd5b845b81811015611681578051845260209384019301611bc1565b600060808284031215611beb57600080fd5b611bf3611460565b9050611bff8383611b94565b8152611c0e8360408401611b94565b602082015292915050565b60006020808385031215611c2c57600080fd5b825167ffffffffffffffff80821115611c4457600080fd5b908401906101e08287031215611c5957600080fd5b611c61611489565b611c6b8784611b64565b81526040611c7b88828601611bd9565b85830152611c8c8860c08601611bd9565b81830152611c9e886101408601611bd9565b60608301526101c084015183811115611cb657600080fd5b80850194505087601f850112611ccb57600080fd5b83519250611cdb6115c88461155b565b83815260069390931b84018501928581019089851115611cfa57600080fd5b948601945b84861015611d2057611d118a87611b64565b82529482019490860190611cff565b60808401525090979650505050505050565b8060005b60028110156110c3578151845260209384019390910190600101611d36565b611d60828251611d32565b6020810151611d726040840182611d32565b505050565b6000610140610100808785378181850152506103208301611da5828501875180518252602090810151910152565b6020915081860151611dbb610180860182611d55565b50604080870151611dd0610200870182611d55565b506060870151611de4610280870182611d55565b5060808701516101e06103008701528051928390528301916000906103408701905b80831015611e3757611e2382865180518252602090810151910152565b938501936001929092019190830190611e06565b50809550505050505082610120830152949350505050565b60a08101818360005b6005811015611a3a578151835260209283019290910190600101611e58565b600082611e8657611e86611aa8565b500490565b8082018082111561073b5761073b6118ce565b60608101818360005b6003811015611a3a578151835260209283019290910190600101611ea7565b8181038181111561073b5761073b6118ce565b60ff828116828216039081111561073b5761073b6118ce565b6000808335601e19843603018112611f0957600080fd5b83018035915067ffffffffffffffff821115611f2457600080fd5b6020019150600581901b3603821315611f3c57600080fd5b9250929050565b600060ff821660ff8103611f5957611f596118ce565b60010192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220a858fd0eac54cd8be0260e93db712ce47e165e50fc7a40352fd09c0ab95b082964736f6c63430008130033";

type ClonableTallyConstructorParams =
  | [linkLibraryAddresses: ClonableTallyLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClonableTallyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class ClonableTally__factory extends ContractFactory {
  constructor(...args: ClonableTallyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        ClonableTally__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: ClonableTallyLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e61c65d9562aef5fa6ab22c0f787cf1e30\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$1540826e134b1b69b7091c82576ee3aadd\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$46fbdf6658faf65265971bdad66851b86c\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$fa059fb1da6d850ca47ea49359bfe89f78\\$__", "g"),
      linkLibraryAddresses[
        "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ClonableTally & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ClonableTally__factory {
    return super.connect(runner) as ClonableTally__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClonableTallyInterface {
    return new Interface(_abi) as ClonableTallyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ClonableTally {
    return new Contract(address, _abi, runner) as unknown as ClonableTally;
  }
}

export interface ClonableTallyLibraryAddresses {
  ["maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"]: string;
  ["maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4"]: string;
}
