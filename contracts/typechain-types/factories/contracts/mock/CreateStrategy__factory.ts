/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CreateStrategy,
  CreateStrategyInterface,
} from "../../../contracts/mock/CreateStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_allo",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_strategy_implementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Allo",
    outputs: [
      {
        internalType: "contract IAllo",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Anchor",
    outputs: [
      {
        internalType: "contract IAnchor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_managers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_metadata",
    outputs: [
      {
        internalType: "uint256",
        name: "protocol",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "pointer",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_profileId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "registryGating",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "metadataRequired",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "reviewThreshold",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "registrationStartTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "registrationEndTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "allocationStartTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "allocationEndTime",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "maxVoiceCreditsPerAllocator",
            type: "uint256",
          },
        ],
        internalType: "struct CreateStrategy.InitializeParams",
        name: "initializeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "coordinatorPubKey",
        type: "tuple",
      },
    ],
    name: "createQVMaciPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "strategies",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "strategyToMaciParams",
    outputs: [
      {
        internalType: "address",
        name: "coordinator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct DomainObjs.PubKey",
        name: "coordinatorPubKey",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "maciFactory",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60016080818152610100604052600460c0908152631d195cdd60e21b60e05260a08190526009928355909190600a906200003a9082620001ea565b5050503480156200004a57600080fd5b5060405162000f5a38038062000f5a8339810160408190526200006d91620002d3565b600080546001600160a01b038087166001600160a01b031992831617909255600280549286169290911682179055604051633a92f65f60e01b8152633a92f65f90620000c79060019060099030906007906004016200037b565b6020604051808303816000875af1158015620000e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200010d91906200046b565b600555600480546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905550620004859050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017057607f821691505b6020821081036200019157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e557600081815260208120601f850160051c81016020861015620001c05750805b601f850160051c820191505b81811015620001e157828155600101620001cc565b5050505b505050565b81516001600160401b0381111562000206576200020662000145565b6200021e816200021784546200015b565b8462000197565b602080601f8311600181146200025657600084156200023d5750858301515b600019600386901b1c1916600185901b178555620001e1565b600085815260208120601f198616915b82811015620002875788860151825594840194600190910190840162000266565b5085821015620002a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b0381168114620002ce57600080fd5b919050565b60008060008060808587031215620002ea57600080fd5b620002f585620002b6565b93506200030560208601620002b6565b92506200031560408601620002b6565b91506200032560608601620002b6565b905092959194509250565b6000815480845260208085019450836000528060002060005b83811015620003705781546001600160a01b03168752958201956001918201910162000349565b509495945050505050565b8481526000602060a081840152600460a0840152631d195cdd60e21b60c084015260e06040840152855460e08401526001808701604061010086015260008154620003c6816200015b565b8061012089015261014085831660008114620003eb5760018114620004065762000436565b60ff1984168a83015282151560051b8a018201945062000436565b856000528760002060005b848110156200042e5781548c820185015290880190890162000411565b8b0183019550505b5050506001600160a01b03891660608801525085810360808701526200045d818862000330565b9a9950505050505050505050565b6000602082840312156200047e57600080fd5b5051919050565b610ac580620004956000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639ac4d9ae116100715780639ac4d9ae14610120578063b2b9632514610181578063bcd674a21461018a578063cce5be9c1461019d578063d574ea3d146101b2578063f32fc16a146101c557600080fd5b80630f1041fa146100ae57806339371b25146100de578063557ed1ba146100f45780637db9743b146101045780638d93448514610117575b600080fd5b6001546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e66101d8565b6040516100d59291906105a6565b425b6040519081526020016100d5565b6002546100c1906001600160a01b031681565b6100f660085481565b61017261012e3660046105e3565b600c602090815260009182526040918290208054835180850190945260018201548452600282015492840192909252600301546001600160a01b0391821692911683565b6040516100d593929190610605565b6100f660055481565b6100c161019836600461063f565b61026f565b6101b06101ab366004610715565b610299565b005b6100c16101c036600461063f565b610459565b6000546100c1906001600160a01b031681565b60098054600a80549192916101ec906107e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610218906107e3565b80156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b5050505050905082565b6007818154811061027f57600080fd5b6000918252602090912001546001600160a01b0316905081565b600454600680546000926102c7926001600160a01b039091169190846102be8361081d565b91905055610469565b604080516060810182526001600160a01b038087168252602080830187905260035490911682840152825180840184528881528082018390529251939450909260009261031692909101610844565b60408051601f1981840301815290829052600080546005546370803ea560e11b85529294506001600160a01b03169263e1007d4a9261037a9290918891879173eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee9190600990600790600401610966565b6020604051808303816000875af1158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd9190610a76565b60085550600b805460018181019092557f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b039485166001600160a01b031991821681179092556000918252600c60209081526040928390208551815490881690841617815585820151805195820195909555930151600284015592015160039091018054919093169116179055505050565b600b818154811061027f57600080fd5b6040516bffffffffffffffffffffffff193360601b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506104b584826104bf565b9150505b92915050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166104b95760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b6000815180845260005b818110156105865760208185018101518683018201520161056a565b506000602082860101526020601f19601f83011685010191505092915050565b8281526040602082015260006105bf6040830184610560565b949350505050565b80356001600160a01b03811681146105de57600080fd5b919050565b6000602082840312156105f557600080fd5b6105fe826105c7565b9392505050565b6001600160a01b038481168252608082019061062e602084018680518252602090810151910152565b808416606084015250949350505050565b60006020828403121561065157600080fd5b5035919050565b604051610100810167ffffffffffffffff8111828210171561068a57634e487b7160e01b600052604160045260246000fd5b60405290565b803580151581146105de57600080fd5b803567ffffffffffffffff811681146105de57600080fd5b6000604082840312156106ca57600080fd5b6040516040810181811067ffffffffffffffff821117156106fb57634e487b7160e01b600052604160045260246000fd5b604052823581526020928301359281019290925250919050565b600080600083850361016081121561072c57600080fd5b6101008082121561073c57600080fd5b610744610658565b915061074f86610690565b825261075d60208701610690565b602083015260408601356040830152610778606087016106a0565b6060830152610789608087016106a0565b608083015261079a60a087016106a0565b60a08301526107ab60c087016106a0565b60c083015260e086013560e08301528194506107c88187016105c7565b935050506107da8561012086016106b8565b90509250925092565b600181811c908216806107f757607f821691505b60208210810361081757634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161083d57634e487b7160e01b600052601160045260246000fd5b5060010190565b60006101808201905082518051151583526020810151151560208401526040810151604084015267ffffffffffffffff6060820151166060840152608081015161089a608085018267ffffffffffffffff169052565b5060a08101516108b660a085018267ffffffffffffffff169052565b5060c08101516108d260c085018267ffffffffffffffff169052565b5060e0908101519083015260209283015180516001600160a01b0390811661010085015281850151805161012086015290940151610140840152604001519092166101609091015290565b6000815480845260208085019450836000528060002060005b8381101561095b5781546001600160a01b031687529582019560019182019101610936565b509495945050505050565b8781526000602060018060a01b03808a168285015260e0604085015261098f60e085018a610560565b818916606086015287608086015284810360a08601528654815260019150818701604084830152600081548181861c9050858216806109cf57607f821691505b87821081036109ec57634e487b7160e01b84526022600452602484fd5b60408601829052606086019550808015610a0d5760018114610a2357610a4e565b60ff198416875282151560051b87019450610a4e565b60008681526020902060005b84811015610a4857815489820152908901908a01610a2f565b88019550505b5050505086810360c0880152610a64818961091d565b9e9d5050505050505050505050505050565b600060208284031215610a8857600080fd5b505191905056fea26469706673582212205c1ca7af018ec7259955ff594cf04e3a7f7144cb6cd6a85a849696060df2ec7064736f6c63430008130033";

type CreateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreateStrategy__factory extends ContractFactory {
  constructor(...args: CreateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _allo: AddressLike,
    _registry: AddressLike,
    _strategy_implementation: AddressLike,
    factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _allo,
      _registry,
      _strategy_implementation,
      factory,
      overrides || {}
    );
  }
  override deploy(
    _allo: AddressLike,
    _registry: AddressLike,
    _strategy_implementation: AddressLike,
    factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _allo,
      _registry,
      _strategy_implementation,
      factory,
      overrides || {}
    ) as Promise<
      CreateStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CreateStrategy__factory {
    return super.connect(runner) as CreateStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreateStrategyInterface {
    return new Interface(_abi) as CreateStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CreateStrategy {
    return new Contract(address, _abi, runner) as unknown as CreateStrategy;
  }
}
