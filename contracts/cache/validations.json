{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "10d6db350d94a6f05b9903eaaf5af7b460ebaa3794641c04accaec0c72448564",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "10cb14c440247d756acf55ed33bb23722b666cdd6f4a64c514f6c5c61d1b89fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "305f47de5f3d607e3c9d2cded3ec1d78534a6553df25862423d5d90b99dcee5c",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "b5d023b643e1dcc2e13c444cf05e0a6873142aab0fc4760fe3a14f622976b8bc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "4b9bcc7783a36cf797b97628345acacf3fc2f4e7a181154b34ef1fd124030bff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "ed8a0a69c7091e172d91f3ebf4a713b29aa07b9d14bed5ac20413b6337ca1523",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin/contracts/utils/Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:ClonableAccQueueQuinaryBlankSl": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:12",
        "version": {
          "withMetadata": "eae7a26677159c8236a1d7653ebb9f1ed8e9996253203268772644fc97c15aff",
          "withoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381",
          "linkedWithoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3462,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3598,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2936,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3540,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:47"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:53"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:56"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:59"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:63"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)2411_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:66"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)2411_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:69"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:72"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:75"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:78"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:81"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:85"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:88"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)2411_storage": {
              "label": "struct ClonableAccQueueQuinaryBlankSl.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:ClonableAccQueueQuinaryMaci": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:12",
        "version": {
          "withMetadata": "27b6b60f5a10600e577b4c69c28bb7c0c5fa8b6708fecc531f63e80be1496463",
          "withoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42",
          "linkedWithoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3461,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3597,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2935,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3539,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:46"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:52"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:55"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:58"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:62"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)3668_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:65"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)3668_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:68"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:71"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:74"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:77"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:80"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:84"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:87"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:90"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)3668_storage": {
              "label": "struct ClonableAccQueueQuinaryMaci.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACI.sol:ClonableMACI": {
        "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:19",
        "version": {
          "withMetadata": "0fb1570b8bccc5523e7d5cea90e6fbbd17bcd56c8e35b7c1924035c6c0a85247",
          "withoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341",
          "linkedWithoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/interfaces/IMACI.sol:IMACI"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address)",
          "signUp((uint256,uint256),bytes,bytes)",
          "deployPoll(uint256,(uint256,uint256))",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "getStateAqRoot()",
          "getPoll(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3794,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3994,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3474,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3936,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:23"
            },
            {
              "label": "nextPollId",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:36"
            },
            {
              "label": "polls",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:39"
            },
            {
              "label": "subtreesMerged",
              "offset": 0,
              "slot": "104",
              "type": "t_bool",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:42"
            },
            {
              "label": "numSignUps",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:45"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(TreeDepths)16238_storage",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:47"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:49"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:51"
            },
            {
              "label": "topupCredit",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(TopupCredit)13259",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:54"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "110",
              "type": "t_contract(ClonableMACIFactory)5877",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:57"
            },
            {
              "label": "stateAq",
              "offset": 0,
              "slot": "111",
              "type": "t_contract(AccQueue)15168",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:61"
            },
            {
              "label": "signUpGatekeeper",
              "offset": 0,
              "slot": "112",
              "type": "t_contract(SignUpGatekeeper)13892",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:65"
            },
            {
              "label": "initialVoiceCreditProxy",
              "offset": 0,
              "slot": "113",
              "type": "t_contract(InitialVoiceCreditProxy)13907",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:69"
            },
            {
              "label": "coordinator",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15168": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(ClonableMACIFactory)5877": {
              "label": "contract ClonableMACIFactory",
              "numberOfBytes": "20"
            },
            "t_contract(InitialVoiceCreditProxy)13907": {
              "label": "contract InitialVoiceCreditProxy",
              "numberOfBytes": "20"
            },
            "t_contract(SignUpGatekeeper)13892": {
              "label": "contract SignUpGatekeeper",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13259": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(TreeDepths)16238_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:ClonableMACIFactory": {
        "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:19",
        "version": {
          "withMetadata": "c64f12ce9359bceed757d880572bc7ae4ab89bedc6b27144a49202e1be7d4c6f",
          "withoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24",
          "linkedWithoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "initialize(uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address,address)",
          "createMACI(address,address,address,address)",
          "deployPoll(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,address)",
          "deployTally(address,address,address,address,address)",
          "deployMessageProcessor(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:24"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(TreeDepths)16238_storage",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:26"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:28"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:30"
            },
            {
              "label": "clonableMaciImplementation",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:33"
            },
            {
              "label": "AccQueueQuinaryBlankSlImplementation",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:35"
            },
            {
              "label": "AccQueueQuinaryMaciImplementation",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:37"
            },
            {
              "label": "PollImplementation",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:39"
            },
            {
              "label": "TallyImplementation",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:41"
            },
            {
              "label": "MessageProcessorImplementation",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:43"
            },
            {
              "label": "deployNonce",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(TreeDepths)16238_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:ClonableMessageProcessor": {
        "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:20",
        "version": {
          "withMetadata": "d5777b5b621101b123c34e6170058aeb7ff80671b3a48a5f2266d8e5e781ed15",
          "withoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21",
          "linkedWithoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "processMessages(uint256,uint256[8])",
          "genProcessMessagesPublicInputHash(uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8)",
          "genProcessMessagesPackedVals(uint256,uint256,uint256,uint8,uint8)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1586,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 2933,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1266,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1664,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "processingComplete",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:36"
            },
            {
              "label": "numBatchesProcessed",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:39"
            },
            {
              "label": "currentMessageBatchIndex",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:44"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:47"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IPoll)14091",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:49"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IVerifier)14112",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:50"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IVkRegistry)14159",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPoll)14091": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)14112": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)14159": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonablePoll.sol:ClonablePoll": {
        "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:19",
        "version": {
          "withMetadata": "fe93179cac166488c1ac31bb530aff0d66ae727afb6c61791d88016b10a6147d",
          "withoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447",
          "linkedWithoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3243,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 5328,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2941,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4554,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "106",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:23"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "107",
              "type": "t_struct(PubKey)16211_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:26"
            },
            {
              "label": "coordinatorPubKeyHash",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:29"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:32"
            },
            {
              "label": "deployTime",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:35"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:38"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "113",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:41"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:50"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:53"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:57"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "117",
              "type": "t_struct(MaxValues)16243_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:60"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "119",
              "type": "t_struct(TreeDepths)16238_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:63"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "120",
              "type": "t_struct(ExtContracts)16253_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15168": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)13954": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13259": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)16253_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)13954",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)15168",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)13259",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)16243_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)16211_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)16238_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableTally.sol:ClonableTally": {
        "src": "contracts/ClonableMaciContracts/ClonableTally.sol:19",
        "version": {
          "withMetadata": "70d8e4b6e11b21d67e3d0ec4899de25fbd78801fa7211ab06b1ac59c5097912e",
          "withoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05",
          "linkedWithoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2098,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3284,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1778,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3037,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:34"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:36"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:39"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IVerifier)14112",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:41"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IVkRegistry)14159",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:42"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IPoll)14091",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:43"
            },
            {
              "label": "messageProcessor",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IMessageProcessor)13970",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IMessageProcessor)13970": {
              "label": "contract IMessageProcessor",
              "numberOfBytes": "20"
            },
            "t_contract(IPoll)14091": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)14112": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)14159": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IAllo.sol:IAllo": {
        "src": "contracts/core/interfaces/IAllo.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address payable,uint256,uint256)",
          "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "updatePoolMetadata(uint256,(uint256,string))",
          "updateRegistry(address)",
          "updateTreasury(address payable)",
          "updatePercentFee(uint256)",
          "updateBaseFee(uint256)",
          "addToCloneableStrategies(address)",
          "removeFromCloneableStrategies(address)",
          "addPoolManager(uint256,address)",
          "removePoolManager(uint256,address)",
          "recoverFunds(address,address)",
          "registerRecipient(uint256,bytes)",
          "batchRegisterRecipient(uint256[],bytes[])",
          "fundPool(uint256,uint256)",
          "allocate(uint256,bytes)",
          "batchAllocate(uint256[],bytes[])",
          "distribute(uint256,address[],bytes)",
          "isPoolAdmin(uint256,address)",
          "isPoolManager(uint256,address)",
          "isCloneableStrategy(address)",
          "getStrategy(uint256)",
          "getPercentFee()",
          "getBaseFee()",
          "getTreasury()",
          "getRegistry()",
          "getPool(uint256)",
          "getFeeDenominator()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IRegistry.sol:IRegistry": {
        "src": "contracts/core/interfaces/IRegistry.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getProfileById(bytes32)",
          "getProfileByAnchor(address)",
          "isOwnerOrMemberOfProfile(bytes32,address)",
          "isOwnerOfProfile(bytes32,address)",
          "isMemberOfProfile(bytes32,address)",
          "createProfile(uint256,string,(uint256,string),address,address[])",
          "updateProfileName(bytes32,string)",
          "updateProfileMetadata(bytes32,(uint256,string))",
          "updateProfilePendingOwner(bytes32,address)",
          "acceptProfileOwnership(bytes32)",
          "addMembers(bytes32,address[])",
          "removeMembers(bytes32,address[])",
          "recoverFunds(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IStrategy.sol:IStrategy": {
        "src": "contracts/core/interfaces/IStrategy.sol:98",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "isValidAllocator(address)",
          "isPoolActive()",
          "getPoolAmount()",
          "increasePoolAmount(uint256)",
          "getRecipientStatus(address)",
          "getPayouts(address[],bytes[])",
          "initialize(uint256,bytes)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Errors.sol:Errors": {
        "src": "contracts/core/libraries/Errors.sol:111",
        "version": {
          "withMetadata": "3b14e39cf9b7c76bfc83f1463d6a9d115c0dba9aefe884e8bc0aef89703fceab",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Native.sol:Native": {
        "src": "contracts/core/libraries/Native.sol:26",
        "version": {
          "withMetadata": "84f1d3b2379ad8aba90d16a039e414d876f56a3bd71fc949ea254df70f3ef7ad",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Transfer.sol:Transfer": {
        "src": "contracts/core/libraries/Transfer.sol:96",
        "version": {
          "withMetadata": "d8a0604caf656e245d0361303296079229b9f334647c32578633be036ca75bff",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [
          "contracts/core/libraries/Native.sol:Native"
        ],
        "libraries": [
          "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "contracts/core/libraries/utils/SafeTransferLib.sol:12",
        "version": {
          "withMetadata": "b8aeb8b62cd50e969db8d39acd4613c9f0fb4499cb99dcae179d81b2a96b67c1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/BaseStrategy.sol:BaseStrategy": {
        "src": "contracts/strategies/BaseStrategy.sol:111",
        "inherit": [
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "getPoolAmount()",
          "isPoolActive()",
          "getRecipientStatus(address)",
          "increasePoolAmount(uint256)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)",
          "getPayouts(address[],bytes[])",
          "isValidAllocator(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:129"
          },
          {
            "kind": "state-variable-immutable",
            "name": "allo",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "strategyId",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACI.sol:QVMACI": {
        "src": "contracts/strategies/qv-maci/QVMACI.sol:121",
        "version": {
          "withMetadata": "02c5b3ad8ee6bc29bbbe7150d6ae30afa5c463a9b77cde6cc172f273ecee1816",
          "withoutMetadata": "c1f70551705df70ecec05a6f5a04693731d398aa3d838553d57ab397d5574b2a",
          "linkedWithoutMetadata": "c1f70551705df70ecec05a6f5a04693731d398aa3d838553d57ab397d5574b2a"
        },
        "inherit": [
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase",
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "(address,string,address)",
          "initialize(uint256,bytes)",
          "signup((uint256,uint256))",
          "register(address,bytes)",
          "publishTallyHash(string)",
          "finalize(uint256,uint256,uint256,uint256)",
          "_addTallyResult(uint256,uint256,uint256[][],uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACI",
            "src": "contracts/strategies/qv-maci/QVMACI.sol:159"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:122"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:125"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:128"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:129"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:130"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:134"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:138"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:139"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:141"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:146"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)8421",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:150"
            },
            {
              "label": "_recipientCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Counter)2184_storage",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:152"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(Recipient)10499_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:192"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8434,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:196"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8434)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:205"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:207"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:126"
            },
            {
              "label": "_maci",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "_pollContracts",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(PollContracts)4925_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "isFinalized",
              "offset": 0,
              "slot": "23",
              "type": "t_bool",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "coordinator",
              "offset": 1,
              "slot": "23",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:130"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "24",
              "type": "t_struct(PubKey)16211_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:133"
            },
            {
              "label": "tallyHash",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:134"
            },
            {
              "label": "totalTallyResults",
              "offset": 0,
              "slot": "27",
              "type": "t_uint256",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)8421": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)8434": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)8434)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8434)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8434,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)10499_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)8434,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8434))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)8434,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)2184_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)8690_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PollContracts)4925_storage": {
              "label": "struct ClonableMACI.PollContracts",
              "members": [
                {
                  "label": "poll",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageProcessor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tally",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "subsidy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PubKey)16211_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)10499_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)8690_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)8434",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase": {
        "src": "contracts/strategies/qv-maci/QVMACIBase.sol:115",
        "inherit": [
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Counters.sol:Counters"
        ],
        "methods": [
          "addAllocator(address)",
          "removeAllocator(address)",
          "getVoiceCredits(address,bytes)",
          "reviewRecipients(address[],enum IStrategy.Status[])",
          "withdraw(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACIBase",
            "src": "contracts/strategies/qv-maci/QVMACIBase.sol:232"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:122"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:125"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:128"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:129"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:130"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:134"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:138"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:139"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:141"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:146"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)8421",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:150"
            },
            {
              "label": "_recipientCounter",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(Counter)2184_storage",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:152"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_struct(Recipient)10499_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:192"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8434,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:196"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8434)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:205"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:207"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)8421": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)8434": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)8434)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8434)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8434,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)10499_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)8434,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8434))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)8434,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)2184_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)8690_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)10499_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)8690_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)8434",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants": {
        "src": "contracts/strategies/qv-maci/interfaces/Contrants.sol:15",
        "version": {
          "withMetadata": "de20ed204a5c98f0cbfb34ccfc8089d498621d0dfe6c28a8a1830fbc984ab6dc",
          "withoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155",
          "linkedWithoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Poll.sol:Poll": {
        "src": "maci-contracts/contracts/Poll.sol:18",
        "version": {
          "withMetadata": "999668ea7b5abbb352324da0f8e8c4eae5b08efc1826a484160b70a6c15c9065",
          "withoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8",
          "linkedWithoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 711,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4909,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 6593,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 4589,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 5762,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Poll",
            "src": "maci-contracts/contracts/Poll.sol:90"
          },
          {
            "kind": "state-variable-immutable",
            "name": "coordinatorPubKeyHash",
            "src": "maci-contracts/contracts/Poll.sol:28"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployTime",
            "src": "maci-contracts/contracts/Poll.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "duration",
            "src": "maci-contracts/contracts/Poll.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:22"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PubKey)16211_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:25"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:31"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "10",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:40"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:49"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:52"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:56"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(MaxValues)16243_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:59"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(TreeDepths)16238_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:62"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "17",
              "type": "t_struct(ExtContracts)16253_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15168": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)13954": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13259": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)16253_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)13954",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)15168",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)13259",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)16243_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)16211_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)16238_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Tally.sol:Tally": {
        "src": "maci-contracts/contracts/Tally.sol:17",
        "version": {
          "withMetadata": "2e6c76c7af63a78976cf4d82fbb854333c26e57fc3ae62298c89e3172791d66e",
          "withoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732",
          "linkedWithoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2612,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3861,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2292,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3614,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tally",
            "src": "maci-contracts/contracts/Tally.sol:57"
          },
          {
            "kind": "state-variable-immutable",
            "name": "verifier",
            "src": "maci-contracts/contracts/Tally.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vkRegistry",
            "src": "maci-contracts/contracts/Tally.sol:40"
          },
          {
            "kind": "state-variable-immutable",
            "name": "poll",
            "src": "maci-contracts/contracts/Tally.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "messageProcessor",
            "src": "maci-contracts/contracts/Tally.sol:42"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:32"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:34"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/TopupCredit.sol:TopupCredit": {
        "src": "maci-contracts/contracts/TopupCredit.sol:10",
        "version": {
          "withMetadata": "46febaec1d74c7a99513449864f7bd74c965009ab4c4c64940a49a0e50a7e5cb",
          "withoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8",
          "linkedWithoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "airdropTo(address,uint256)",
          "airdrop(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TopupCredit",
            "src": "maci-contracts/contracts/TopupCredit.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Hasher.sol:Hasher": {
        "src": "maci-contracts/contracts/crypto/Hasher.sol:12",
        "version": {
          "withMetadata": "f2a70a6757a8ed77941c15734fb12586a2ba22821be1dbc120aa4722ba2a2720",
          "withoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941",
          "linkedWithoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [
          "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3",
          "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4",
          "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5",
          "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
        ],
        "methods": [
          "sha256Hash(uint256[])",
          "hash2(uint256[2])",
          "hash3(uint256[3])",
          "hash4(uint256[4])",
          "hash5(uint256[5])",
          "hashLeftRight(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 605,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 721,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 285,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 663,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Pairing.sol:Pairing": {
        "src": "maci-contracts/contracts/crypto/Pairing.sol:25",
        "version": {
          "withMetadata": "393f04c886f91cd971a48a32dfe3a350aa7e5ab8384990816aa433fe2c28e10d",
          "withoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d",
          "linkedWithoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3": {
        "src": "maci-contracts/contracts/crypto/PoseidonT3.sol:5",
        "version": {
          "withMetadata": "91f7ec78acb1a1ed0228912980666efc400f1ef4a5403a61deae78e461b2431f",
          "withoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8",
          "linkedWithoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4": {
        "src": "maci-contracts/contracts/crypto/PoseidonT4.sol:5",
        "version": {
          "withMetadata": "608ff887bc7e496544cadad4f55d2ea88a3cf449b868b4a85df0877c371d6b95",
          "withoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003",
          "linkedWithoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5": {
        "src": "maci-contracts/contracts/crypto/PoseidonT5.sol:5",
        "version": {
          "withMetadata": "e657f512ebf553f6235790cfc80dbaa0a9a664ae8c1987dca8bd88da86b749df",
          "withoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896",
          "linkedWithoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[4])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6": {
        "src": "maci-contracts/contracts/crypto/PoseidonT6.sol:5",
        "version": {
          "withMetadata": "e94ad6d62a7638d2a0cd708452849ad086facf01921159f2168793977182b2f7",
          "withoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f",
          "linkedWithoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[5])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon": {
        "src": "maci-contracts/contracts/crypto/SnarkCommon.sol:8",
        "version": {
          "withMetadata": "15043801d6b8dc58a9d2225352550c5ef47cae3aece254de5d051e3db62fc077",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants": {
        "src": "maci-contracts/contracts/crypto/SnarkConstants.sol:7",
        "version": {
          "withMetadata": "a99ebb944bc49f0a41026990fdf94effdb41f75f306c12447780ecac6201ec11",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:SignUpGatekeeper": {
        "src": "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setMaciInstance(address)",
          "register(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:InitialVoiceCreditProxy": {
        "src": "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVoiceCredits(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMACI.sol:IMACI": {
        "src": "maci-contracts/contracts/interfaces/IMACI.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stateTreeDepth()",
          "getStateAqRoot()",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "numSignUps()",
          "stateAq()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor": {
        "src": "maci-contracts/contracts/interfaces/IMessageProcessor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "processingComplete()",
          "sbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IPoll.sol:IPoll": {
        "src": "maci-contracts/contracts/interfaces/IPoll.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "numSignUpsAndMessages()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "stateAqMerged()",
          "treeDepths()",
          "maxValues()",
          "extContracts()",
          "coordinatorPubKeyHash()",
          "currentSbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVerifier.sol:IVerifier": {
        "src": "maci-contracts/contracts/interfaces/IVerifier.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verify(uint256[8],((uint256,uint256),(uint256[2],uint256[2]),(uint256[2],uint256[2]),(uint256[2],uint256[2]),struct Pairing.G1Point[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVkRegistry.sol:IVkRegistry": {
        "src": "maci-contracts/contracts/interfaces/IVkRegistry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTallyVk(uint256,uint256,uint256)",
          "getProcessVk(uint256,uint256,uint256,uint256)",
          "getSubsidyVk(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueue.sol:AccQueue": {
        "src": "maci-contracts/contracts/trees/AccQueue.sol:13",
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueue",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:91"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subDepth",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "hashLength",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subTreeCapacity",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14189_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14189_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14189_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:13",
        "inherit": [
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinary",
            "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14189_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14189_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14189_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:AccQueueQuinaryBlankSl": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:11",
        "version": {
          "withMetadata": "9f58a66e34863112ec379152afe6dfa7d3689373e90a9efe71ec96ae1414465b",
          "withoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9",
          "linkedWithoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary",
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4429,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 4565,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3903,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4507,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinaryBlankSl",
            "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:14"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14189_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14189_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "370",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14189_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots": {
        "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EmptyBallotRoots",
            "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities": {
        "src": "maci-contracts/contracts/utilities/CommonUtilities.sol:10",
        "version": {
          "withMetadata": "cc5488ab471427a6b5a6c7860da5bd90f981c61d6cb24df9728697d4bd905f4e",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs": {
        "src": "maci-contracts/contracts/utilities/DomainObjs.sol:7",
        "version": {
          "withMetadata": "6794785e87775348237a88e965f87a6f7da43fb9b5e6dd6e5f79215b91549624",
          "withoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef",
          "linkedWithoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Params.sol:Params": {
        "src": "maci-contracts/contracts/utilities/Params.sol:13",
        "version": {
          "withMetadata": "87b59559ccec4c9a435a05f5f01fa978028e2f312c99096e6de3e5d0af42af31",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Utilities.sol:Utilities": {
        "src": "maci-contracts/contracts/utilities/Utilities.sol:12",
        "version": {
          "withMetadata": "398d1f083f864d6766ff94b8e7944efbfcde178af2fde27dd7e4fe80b2ca6d6c",
          "withoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b",
          "linkedWithoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "hashStateLeaf(((uint256,uint256),uint256,uint256))",
          "padAndHashMessage(uint256[2],uint256)",
          "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256))"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1159,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 1339,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 839,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1281,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "10d6db350d94a6f05b9903eaaf5af7b460ebaa3794641c04accaec0c72448564",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "10cb14c440247d756acf55ed33bb23722b666cdd6f4a64c514f6c5c61d1b89fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "305f47de5f3d607e3c9d2cded3ec1d78534a6553df25862423d5d90b99dcee5c",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "b5d023b643e1dcc2e13c444cf05e0a6873142aab0fc4760fe3a14f622976b8bc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "4b9bcc7783a36cf797b97628345acacf3fc2f4e7a181154b34ef1fd124030bff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin/contracts/utils/Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:ClonableAccQueueQuinaryBlankSl": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:12",
        "version": {
          "withMetadata": "eae7a26677159c8236a1d7653ebb9f1ed8e9996253203268772644fc97c15aff",
          "withoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381",
          "linkedWithoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3462,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3598,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2936,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3540,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:47"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:53"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:56"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:59"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:63"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)2337_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:66"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)2337_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:69"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:72"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:75"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:78"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:81"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:85"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:88"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)2337_storage": {
              "label": "struct ClonableAccQueueQuinaryBlankSl.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:ClonableAccQueueQuinaryMaci": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:12",
        "version": {
          "withMetadata": "27b6b60f5a10600e577b4c69c28bb7c0c5fa8b6708fecc531f63e80be1496463",
          "withoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42",
          "linkedWithoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3461,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3597,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2935,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3539,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:46"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:52"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:55"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:58"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:62"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)3594_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:65"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)3594_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:68"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:71"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:74"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:77"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:80"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:84"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:87"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:90"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)3594_storage": {
              "label": "struct ClonableAccQueueQuinaryMaci.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACI.sol:ClonableMACI": {
        "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:19",
        "version": {
          "withMetadata": "0fb1570b8bccc5523e7d5cea90e6fbbd17bcd56c8e35b7c1924035c6c0a85247",
          "withoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341",
          "linkedWithoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/interfaces/IMACI.sol:IMACI"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address)",
          "signUp((uint256,uint256),bytes,bytes)",
          "deployPoll(uint256,(uint256,uint256))",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "getStateAqRoot()",
          "getPoll(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3794,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3994,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3474,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3936,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:23"
            },
            {
              "label": "nextPollId",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:36"
            },
            {
              "label": "polls",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:39"
            },
            {
              "label": "subtreesMerged",
              "offset": 0,
              "slot": "104",
              "type": "t_bool",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:42"
            },
            {
              "label": "numSignUps",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:45"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(TreeDepths)16156_storage",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:47"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:49"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:51"
            },
            {
              "label": "topupCredit",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(TopupCredit)13177",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:54"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "110",
              "type": "t_contract(ClonableMACIFactory)5803",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:57"
            },
            {
              "label": "stateAq",
              "offset": 0,
              "slot": "111",
              "type": "t_contract(AccQueue)15086",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:61"
            },
            {
              "label": "signUpGatekeeper",
              "offset": 0,
              "slot": "112",
              "type": "t_contract(SignUpGatekeeper)13810",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:65"
            },
            {
              "label": "initialVoiceCreditProxy",
              "offset": 0,
              "slot": "113",
              "type": "t_contract(InitialVoiceCreditProxy)13825",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:69"
            },
            {
              "label": "coordinator",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15086": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(ClonableMACIFactory)5803": {
              "label": "contract ClonableMACIFactory",
              "numberOfBytes": "20"
            },
            "t_contract(InitialVoiceCreditProxy)13825": {
              "label": "contract InitialVoiceCreditProxy",
              "numberOfBytes": "20"
            },
            "t_contract(SignUpGatekeeper)13810": {
              "label": "contract SignUpGatekeeper",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13177": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(TreeDepths)16156_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:ClonableMACIFactory": {
        "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:19",
        "version": {
          "withMetadata": "c64f12ce9359bceed757d880572bc7ae4ab89bedc6b27144a49202e1be7d4c6f",
          "withoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24",
          "linkedWithoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "initialize(uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address,address)",
          "createMACI(address,address,address,address)",
          "deployPoll(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,address)",
          "deployTally(address,address,address,address,address)",
          "deployMessageProcessor(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:24"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(TreeDepths)16156_storage",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:26"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:28"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:30"
            },
            {
              "label": "clonableMaciImplementation",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:33"
            },
            {
              "label": "AccQueueQuinaryBlankSlImplementation",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:35"
            },
            {
              "label": "AccQueueQuinaryMaciImplementation",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:37"
            },
            {
              "label": "PollImplementation",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:39"
            },
            {
              "label": "TallyImplementation",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:41"
            },
            {
              "label": "MessageProcessorImplementation",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:43"
            },
            {
              "label": "deployNonce",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(TreeDepths)16156_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:ClonableMessageProcessor": {
        "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:20",
        "version": {
          "withMetadata": "d5777b5b621101b123c34e6170058aeb7ff80671b3a48a5f2266d8e5e781ed15",
          "withoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21",
          "linkedWithoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "processMessages(uint256,uint256[8])",
          "genProcessMessagesPublicInputHash(uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8)",
          "genProcessMessagesPackedVals(uint256,uint256,uint256,uint8,uint8)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1586,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 2933,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1266,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1664,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "processingComplete",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:36"
            },
            {
              "label": "numBatchesProcessed",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:39"
            },
            {
              "label": "currentMessageBatchIndex",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:44"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:47"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IPoll)14009",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:49"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IVerifier)14030",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:50"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IVkRegistry)14077",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPoll)14009": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)14030": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)14077": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonablePoll.sol:ClonablePoll": {
        "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:19",
        "version": {
          "withMetadata": "fe93179cac166488c1ac31bb530aff0d66ae727afb6c61791d88016b10a6147d",
          "withoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447",
          "linkedWithoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3243,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 5328,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2941,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4554,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "106",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:23"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "107",
              "type": "t_struct(PubKey)16129_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:26"
            },
            {
              "label": "coordinatorPubKeyHash",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:29"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:32"
            },
            {
              "label": "deployTime",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:35"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:38"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "113",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:41"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:50"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:53"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:57"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "117",
              "type": "t_struct(MaxValues)16161_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:60"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "119",
              "type": "t_struct(TreeDepths)16156_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:63"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "120",
              "type": "t_struct(ExtContracts)16171_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15086": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)13872": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13177": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)16171_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)13872",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)15086",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)13177",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)16161_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)16129_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)16156_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableTally.sol:ClonableTally": {
        "src": "contracts/ClonableMaciContracts/ClonableTally.sol:19",
        "version": {
          "withMetadata": "70d8e4b6e11b21d67e3d0ec4899de25fbd78801fa7211ab06b1ac59c5097912e",
          "withoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05",
          "linkedWithoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2098,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3284,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1778,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3037,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:34"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:36"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:39"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IVerifier)14030",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:41"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IVkRegistry)14077",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:42"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IPoll)14009",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:43"
            },
            {
              "label": "messageProcessor",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IMessageProcessor)13888",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IMessageProcessor)13888": {
              "label": "contract IMessageProcessor",
              "numberOfBytes": "20"
            },
            "t_contract(IPoll)14009": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)14030": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)14077": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IAllo.sol:IAllo": {
        "src": "contracts/core/interfaces/IAllo.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address payable,uint256,uint256)",
          "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "updatePoolMetadata(uint256,(uint256,string))",
          "updateRegistry(address)",
          "updateTreasury(address payable)",
          "updatePercentFee(uint256)",
          "updateBaseFee(uint256)",
          "addToCloneableStrategies(address)",
          "removeFromCloneableStrategies(address)",
          "addPoolManager(uint256,address)",
          "removePoolManager(uint256,address)",
          "recoverFunds(address,address)",
          "registerRecipient(uint256,bytes)",
          "batchRegisterRecipient(uint256[],bytes[])",
          "fundPool(uint256,uint256)",
          "allocate(uint256,bytes)",
          "batchAllocate(uint256[],bytes[])",
          "distribute(uint256,address[],bytes)",
          "isPoolAdmin(uint256,address)",
          "isPoolManager(uint256,address)",
          "isCloneableStrategy(address)",
          "getStrategy(uint256)",
          "getPercentFee()",
          "getBaseFee()",
          "getTreasury()",
          "getRegistry()",
          "getPool(uint256)",
          "getFeeDenominator()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IRegistry.sol:IRegistry": {
        "src": "contracts/core/interfaces/IRegistry.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getProfileById(bytes32)",
          "getProfileByAnchor(address)",
          "isOwnerOrMemberOfProfile(bytes32,address)",
          "isOwnerOfProfile(bytes32,address)",
          "isMemberOfProfile(bytes32,address)",
          "createProfile(uint256,string,(uint256,string),address,address[])",
          "updateProfileName(bytes32,string)",
          "updateProfileMetadata(bytes32,(uint256,string))",
          "updateProfilePendingOwner(bytes32,address)",
          "acceptProfileOwnership(bytes32)",
          "addMembers(bytes32,address[])",
          "removeMembers(bytes32,address[])",
          "recoverFunds(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IStrategy.sol:IStrategy": {
        "src": "contracts/core/interfaces/IStrategy.sol:98",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "isValidAllocator(address)",
          "isPoolActive()",
          "getPoolAmount()",
          "increasePoolAmount(uint256)",
          "getRecipientStatus(address)",
          "getPayouts(address[],bytes[])",
          "initialize(uint256,bytes)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Errors.sol:Errors": {
        "src": "contracts/core/libraries/Errors.sol:111",
        "version": {
          "withMetadata": "3b14e39cf9b7c76bfc83f1463d6a9d115c0dba9aefe884e8bc0aef89703fceab",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Native.sol:Native": {
        "src": "contracts/core/libraries/Native.sol:26",
        "version": {
          "withMetadata": "84f1d3b2379ad8aba90d16a039e414d876f56a3bd71fc949ea254df70f3ef7ad",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Transfer.sol:Transfer": {
        "src": "contracts/core/libraries/Transfer.sol:96",
        "version": {
          "withMetadata": "d8a0604caf656e245d0361303296079229b9f334647c32578633be036ca75bff",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [
          "contracts/core/libraries/Native.sol:Native"
        ],
        "libraries": [
          "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "contracts/core/libraries/utils/SafeTransferLib.sol:12",
        "version": {
          "withMetadata": "b8aeb8b62cd50e969db8d39acd4613c9f0fb4499cb99dcae179d81b2a96b67c1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/BaseStrategy.sol:BaseStrategy": {
        "src": "contracts/strategies/BaseStrategy.sol:111",
        "inherit": [
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "getPoolAmount()",
          "isPoolActive()",
          "getRecipientStatus(address)",
          "increasePoolAmount(uint256)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)",
          "getPayouts(address[],bytes[])",
          "isValidAllocator(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:129"
          },
          {
            "kind": "state-variable-immutable",
            "name": "allo",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "strategyId",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACI.sol:QVMACI": {
        "src": "contracts/strategies/qv-maci/QVMACI.sol:121",
        "version": {
          "withMetadata": "6b5e849be612deab35e0c41857d0032ab44b7413af9c1c63da68dc1c6a01e66f",
          "withoutMetadata": "01424a87a92b67e3a86df404faf42cb725ca04eb4b5c98018a30ef8a1b78dbb4",
          "linkedWithoutMetadata": "01424a87a92b67e3a86df404faf42cb725ca04eb4b5c98018a30ef8a1b78dbb4"
        },
        "inherit": [
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase",
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "(address,string,address)",
          "initialize(uint256,bytes)",
          "signup((uint256,uint256))",
          "register(address,bytes)",
          "publishTallyHash(string)",
          "finalize(uint256,uint256,uint256,uint256)",
          "_addTallyResult(uint256,uint256,uint256[][],uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACI",
            "src": "contracts/strategies/qv-maci/QVMACI.sol:159"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:118"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:120"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:124"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:127"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:133"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:135"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:140"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:143"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)8347",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:147"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Recipient)10416_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:182"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:191"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:195"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:202"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:126"
            },
            {
              "label": "_maci",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "_pollContracts",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(PollContracts)4851_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "isFinalized",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "coordinator",
              "offset": 1,
              "slot": "22",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:130"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "23",
              "type": "t_struct(PubKey)16129_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:133"
            },
            {
              "label": "tallyHash",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:134"
            },
            {
              "label": "totalTallyResults",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)8347": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)8360": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)8360)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)10416_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)8360,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)8616_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PollContracts)4851_storage": {
              "label": "struct ClonableMACI.PollContracts",
              "members": [
                {
                  "label": "poll",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageProcessor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tally",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "subsidy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PubKey)16129_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)10416_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)8616_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)8360",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase": {
        "src": "contracts/strategies/qv-maci/QVMACIBase.sol:113",
        "inherit": [
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "addAllocator(address)",
          "removeAllocator(address)",
          "getVoiceCredits(address,bytes)",
          "reviewRecipients(address[],enum IStrategy.Status[])",
          "withdraw(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACIBase",
            "src": "contracts/strategies/qv-maci/QVMACIBase.sol:227"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:118"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:120"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:124"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:127"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:133"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:135"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:140"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:143"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)8347",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:147"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Recipient)10416_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:182"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:191"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:195"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:202"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)8347": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)8360": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)8360)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)10416_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)8360,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)8616_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)10416_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)8616_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)8360",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants": {
        "src": "contracts/strategies/qv-maci/interfaces/Contrants.sol:15",
        "version": {
          "withMetadata": "de20ed204a5c98f0cbfb34ccfc8089d498621d0dfe6c28a8a1830fbc984ab6dc",
          "withoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155",
          "linkedWithoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Poll.sol:Poll": {
        "src": "maci-contracts/contracts/Poll.sol:18",
        "version": {
          "withMetadata": "999668ea7b5abbb352324da0f8e8c4eae5b08efc1826a484160b70a6c15c9065",
          "withoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8",
          "linkedWithoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 711,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4909,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 6593,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 4589,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 5762,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Poll",
            "src": "maci-contracts/contracts/Poll.sol:90"
          },
          {
            "kind": "state-variable-immutable",
            "name": "coordinatorPubKeyHash",
            "src": "maci-contracts/contracts/Poll.sol:28"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployTime",
            "src": "maci-contracts/contracts/Poll.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "duration",
            "src": "maci-contracts/contracts/Poll.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:22"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PubKey)16129_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:25"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:31"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "10",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:40"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:49"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:52"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:56"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(MaxValues)16161_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:59"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(TreeDepths)16156_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:62"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "17",
              "type": "t_struct(ExtContracts)16171_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15086": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)13872": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13177": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)16171_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)13872",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)15086",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)13177",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)16161_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)16129_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)16156_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Tally.sol:Tally": {
        "src": "maci-contracts/contracts/Tally.sol:17",
        "version": {
          "withMetadata": "2e6c76c7af63a78976cf4d82fbb854333c26e57fc3ae62298c89e3172791d66e",
          "withoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732",
          "linkedWithoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2612,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3861,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2292,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3614,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tally",
            "src": "maci-contracts/contracts/Tally.sol:57"
          },
          {
            "kind": "state-variable-immutable",
            "name": "verifier",
            "src": "maci-contracts/contracts/Tally.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vkRegistry",
            "src": "maci-contracts/contracts/Tally.sol:40"
          },
          {
            "kind": "state-variable-immutable",
            "name": "poll",
            "src": "maci-contracts/contracts/Tally.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "messageProcessor",
            "src": "maci-contracts/contracts/Tally.sol:42"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:32"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:34"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/TopupCredit.sol:TopupCredit": {
        "src": "maci-contracts/contracts/TopupCredit.sol:10",
        "version": {
          "withMetadata": "46febaec1d74c7a99513449864f7bd74c965009ab4c4c64940a49a0e50a7e5cb",
          "withoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8",
          "linkedWithoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "airdropTo(address,uint256)",
          "airdrop(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TopupCredit",
            "src": "maci-contracts/contracts/TopupCredit.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Hasher.sol:Hasher": {
        "src": "maci-contracts/contracts/crypto/Hasher.sol:12",
        "version": {
          "withMetadata": "f2a70a6757a8ed77941c15734fb12586a2ba22821be1dbc120aa4722ba2a2720",
          "withoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941",
          "linkedWithoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [
          "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3",
          "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4",
          "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5",
          "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
        ],
        "methods": [
          "sha256Hash(uint256[])",
          "hash2(uint256[2])",
          "hash3(uint256[3])",
          "hash4(uint256[4])",
          "hash5(uint256[5])",
          "hashLeftRight(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 605,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 721,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 285,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 663,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Pairing.sol:Pairing": {
        "src": "maci-contracts/contracts/crypto/Pairing.sol:25",
        "version": {
          "withMetadata": "393f04c886f91cd971a48a32dfe3a350aa7e5ab8384990816aa433fe2c28e10d",
          "withoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d",
          "linkedWithoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3": {
        "src": "maci-contracts/contracts/crypto/PoseidonT3.sol:5",
        "version": {
          "withMetadata": "91f7ec78acb1a1ed0228912980666efc400f1ef4a5403a61deae78e461b2431f",
          "withoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8",
          "linkedWithoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4": {
        "src": "maci-contracts/contracts/crypto/PoseidonT4.sol:5",
        "version": {
          "withMetadata": "608ff887bc7e496544cadad4f55d2ea88a3cf449b868b4a85df0877c371d6b95",
          "withoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003",
          "linkedWithoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5": {
        "src": "maci-contracts/contracts/crypto/PoseidonT5.sol:5",
        "version": {
          "withMetadata": "e657f512ebf553f6235790cfc80dbaa0a9a664ae8c1987dca8bd88da86b749df",
          "withoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896",
          "linkedWithoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[4])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6": {
        "src": "maci-contracts/contracts/crypto/PoseidonT6.sol:5",
        "version": {
          "withMetadata": "e94ad6d62a7638d2a0cd708452849ad086facf01921159f2168793977182b2f7",
          "withoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f",
          "linkedWithoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[5])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon": {
        "src": "maci-contracts/contracts/crypto/SnarkCommon.sol:8",
        "version": {
          "withMetadata": "15043801d6b8dc58a9d2225352550c5ef47cae3aece254de5d051e3db62fc077",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants": {
        "src": "maci-contracts/contracts/crypto/SnarkConstants.sol:7",
        "version": {
          "withMetadata": "a99ebb944bc49f0a41026990fdf94effdb41f75f306c12447780ecac6201ec11",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:SignUpGatekeeper": {
        "src": "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setMaciInstance(address)",
          "register(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:InitialVoiceCreditProxy": {
        "src": "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVoiceCredits(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMACI.sol:IMACI": {
        "src": "maci-contracts/contracts/interfaces/IMACI.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stateTreeDepth()",
          "getStateAqRoot()",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "numSignUps()",
          "stateAq()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor": {
        "src": "maci-contracts/contracts/interfaces/IMessageProcessor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "processingComplete()",
          "sbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IPoll.sol:IPoll": {
        "src": "maci-contracts/contracts/interfaces/IPoll.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "numSignUpsAndMessages()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "stateAqMerged()",
          "treeDepths()",
          "maxValues()",
          "extContracts()",
          "coordinatorPubKeyHash()",
          "currentSbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVerifier.sol:IVerifier": {
        "src": "maci-contracts/contracts/interfaces/IVerifier.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verify(uint256[8],((uint256,uint256),(uint256[2],uint256[2]),(uint256[2],uint256[2]),(uint256[2],uint256[2]),struct Pairing.G1Point[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVkRegistry.sol:IVkRegistry": {
        "src": "maci-contracts/contracts/interfaces/IVkRegistry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTallyVk(uint256,uint256,uint256)",
          "getProcessVk(uint256,uint256,uint256,uint256)",
          "getSubsidyVk(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueue.sol:AccQueue": {
        "src": "maci-contracts/contracts/trees/AccQueue.sol:13",
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueue",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:91"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subDepth",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "hashLength",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subTreeCapacity",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14107_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14107_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14107_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:13",
        "inherit": [
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinary",
            "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14107_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14107_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14107_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:AccQueueQuinaryBlankSl": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:11",
        "version": {
          "withMetadata": "9f58a66e34863112ec379152afe6dfa7d3689373e90a9efe71ec96ae1414465b",
          "withoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9",
          "linkedWithoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary",
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4429,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 4565,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3903,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4507,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinaryBlankSl",
            "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:14"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14107_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14107_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "370",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14107_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots": {
        "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EmptyBallotRoots",
            "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities": {
        "src": "maci-contracts/contracts/utilities/CommonUtilities.sol:10",
        "version": {
          "withMetadata": "cc5488ab471427a6b5a6c7860da5bd90f981c61d6cb24df9728697d4bd905f4e",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs": {
        "src": "maci-contracts/contracts/utilities/DomainObjs.sol:7",
        "version": {
          "withMetadata": "6794785e87775348237a88e965f87a6f7da43fb9b5e6dd6e5f79215b91549624",
          "withoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef",
          "linkedWithoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Params.sol:Params": {
        "src": "maci-contracts/contracts/utilities/Params.sol:13",
        "version": {
          "withMetadata": "87b59559ccec4c9a435a05f5f01fa978028e2f312c99096e6de3e5d0af42af31",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Utilities.sol:Utilities": {
        "src": "maci-contracts/contracts/utilities/Utilities.sol:12",
        "version": {
          "withMetadata": "398d1f083f864d6766ff94b8e7944efbfcde178af2fde27dd7e4fe80b2ca6d6c",
          "withoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b",
          "linkedWithoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "hashStateLeaf(((uint256,uint256),uint256,uint256))",
          "padAndHashMessage(uint256[2],uint256)",
          "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256))"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1159,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 1339,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 839,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1281,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "10d6db350d94a6f05b9903eaaf5af7b460ebaa3794641c04accaec0c72448564",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "10cb14c440247d756acf55ed33bb23722b666cdd6f4a64c514f6c5c61d1b89fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "305f47de5f3d607e3c9d2cded3ec1d78534a6553df25862423d5d90b99dcee5c",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "b5d023b643e1dcc2e13c444cf05e0a6873142aab0fc4760fe3a14f622976b8bc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "4b9bcc7783a36cf797b97628345acacf3fc2f4e7a181154b34ef1fd124030bff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin/contracts/utils/Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:ClonableAccQueueQuinaryBlankSl": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:12",
        "version": {
          "withMetadata": "eae7a26677159c8236a1d7653ebb9f1ed8e9996253203268772644fc97c15aff",
          "withoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381",
          "linkedWithoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3462,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3598,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2936,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3540,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:47"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:53"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:56"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:59"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:63"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)2337_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:66"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)2337_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:69"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:72"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:75"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:78"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:81"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:85"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:88"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)2337_storage": {
              "label": "struct ClonableAccQueueQuinaryBlankSl.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:ClonableAccQueueQuinaryMaci": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:12",
        "version": {
          "withMetadata": "27b6b60f5a10600e577b4c69c28bb7c0c5fa8b6708fecc531f63e80be1496463",
          "withoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42",
          "linkedWithoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3461,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3597,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2935,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3539,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:46"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:52"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:55"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:58"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:62"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)3594_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:65"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)3594_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:68"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:71"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:74"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:77"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:80"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:84"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:87"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:90"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)3594_storage": {
              "label": "struct ClonableAccQueueQuinaryMaci.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACI.sol:ClonableMACI": {
        "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:19",
        "version": {
          "withMetadata": "0fb1570b8bccc5523e7d5cea90e6fbbd17bcd56c8e35b7c1924035c6c0a85247",
          "withoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341",
          "linkedWithoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/interfaces/IMACI.sol:IMACI"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address)",
          "signUp((uint256,uint256),bytes,bytes)",
          "deployPoll(uint256,(uint256,uint256))",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "getStateAqRoot()",
          "getPoll(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3794,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3994,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3474,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3936,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:23"
            },
            {
              "label": "nextPollId",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:36"
            },
            {
              "label": "polls",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:39"
            },
            {
              "label": "subtreesMerged",
              "offset": 0,
              "slot": "104",
              "type": "t_bool",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:42"
            },
            {
              "label": "numSignUps",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:45"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(TreeDepths)16144_storage",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:47"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:49"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:51"
            },
            {
              "label": "topupCredit",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(TopupCredit)13165",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:54"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "110",
              "type": "t_contract(ClonableMACIFactory)5803",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:57"
            },
            {
              "label": "stateAq",
              "offset": 0,
              "slot": "111",
              "type": "t_contract(AccQueue)15074",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:61"
            },
            {
              "label": "signUpGatekeeper",
              "offset": 0,
              "slot": "112",
              "type": "t_contract(SignUpGatekeeper)13798",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:65"
            },
            {
              "label": "initialVoiceCreditProxy",
              "offset": 0,
              "slot": "113",
              "type": "t_contract(InitialVoiceCreditProxy)13813",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:69"
            },
            {
              "label": "coordinator",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15074": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(ClonableMACIFactory)5803": {
              "label": "contract ClonableMACIFactory",
              "numberOfBytes": "20"
            },
            "t_contract(InitialVoiceCreditProxy)13813": {
              "label": "contract InitialVoiceCreditProxy",
              "numberOfBytes": "20"
            },
            "t_contract(SignUpGatekeeper)13798": {
              "label": "contract SignUpGatekeeper",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13165": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(TreeDepths)16144_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:ClonableMACIFactory": {
        "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:19",
        "version": {
          "withMetadata": "c64f12ce9359bceed757d880572bc7ae4ab89bedc6b27144a49202e1be7d4c6f",
          "withoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24",
          "linkedWithoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "initialize(uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address,address)",
          "createMACI(address,address,address,address)",
          "deployPoll(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,address)",
          "deployTally(address,address,address,address,address)",
          "deployMessageProcessor(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:24"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(TreeDepths)16144_storage",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:26"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:28"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:30"
            },
            {
              "label": "clonableMaciImplementation",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:33"
            },
            {
              "label": "AccQueueQuinaryBlankSlImplementation",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:35"
            },
            {
              "label": "AccQueueQuinaryMaciImplementation",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:37"
            },
            {
              "label": "PollImplementation",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:39"
            },
            {
              "label": "TallyImplementation",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:41"
            },
            {
              "label": "MessageProcessorImplementation",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:43"
            },
            {
              "label": "deployNonce",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(TreeDepths)16144_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:ClonableMessageProcessor": {
        "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:20",
        "version": {
          "withMetadata": "d5777b5b621101b123c34e6170058aeb7ff80671b3a48a5f2266d8e5e781ed15",
          "withoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21",
          "linkedWithoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "processMessages(uint256,uint256[8])",
          "genProcessMessagesPublicInputHash(uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8)",
          "genProcessMessagesPackedVals(uint256,uint256,uint256,uint8,uint8)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1586,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 2933,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1266,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1664,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "processingComplete",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:36"
            },
            {
              "label": "numBatchesProcessed",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:39"
            },
            {
              "label": "currentMessageBatchIndex",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:44"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:47"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IPoll)13997",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:49"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IVerifier)14018",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:50"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IVkRegistry)14065",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPoll)13997": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)14018": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)14065": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonablePoll.sol:ClonablePoll": {
        "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:19",
        "version": {
          "withMetadata": "fe93179cac166488c1ac31bb530aff0d66ae727afb6c61791d88016b10a6147d",
          "withoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447",
          "linkedWithoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3243,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 5328,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2941,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4554,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "106",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:23"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "107",
              "type": "t_struct(PubKey)16117_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:26"
            },
            {
              "label": "coordinatorPubKeyHash",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:29"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:32"
            },
            {
              "label": "deployTime",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:35"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:38"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "113",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:41"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:50"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:53"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:57"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "117",
              "type": "t_struct(MaxValues)16149_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:60"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "119",
              "type": "t_struct(TreeDepths)16144_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:63"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "120",
              "type": "t_struct(ExtContracts)16159_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15074": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)13860": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13165": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)16159_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)13860",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)15074",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)13165",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)16149_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)16117_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)16144_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableTally.sol:ClonableTally": {
        "src": "contracts/ClonableMaciContracts/ClonableTally.sol:19",
        "version": {
          "withMetadata": "70d8e4b6e11b21d67e3d0ec4899de25fbd78801fa7211ab06b1ac59c5097912e",
          "withoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05",
          "linkedWithoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2098,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3284,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1778,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3037,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:34"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:36"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:39"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IVerifier)14018",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:41"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IVkRegistry)14065",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:42"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IPoll)13997",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:43"
            },
            {
              "label": "messageProcessor",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IMessageProcessor)13876",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IMessageProcessor)13876": {
              "label": "contract IMessageProcessor",
              "numberOfBytes": "20"
            },
            "t_contract(IPoll)13997": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)14018": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)14065": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IAllo.sol:IAllo": {
        "src": "contracts/core/interfaces/IAllo.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address payable,uint256,uint256)",
          "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "updatePoolMetadata(uint256,(uint256,string))",
          "updateRegistry(address)",
          "updateTreasury(address payable)",
          "updatePercentFee(uint256)",
          "updateBaseFee(uint256)",
          "addToCloneableStrategies(address)",
          "removeFromCloneableStrategies(address)",
          "addPoolManager(uint256,address)",
          "removePoolManager(uint256,address)",
          "recoverFunds(address,address)",
          "registerRecipient(uint256,bytes)",
          "batchRegisterRecipient(uint256[],bytes[])",
          "fundPool(uint256,uint256)",
          "allocate(uint256,bytes)",
          "batchAllocate(uint256[],bytes[])",
          "distribute(uint256,address[],bytes)",
          "isPoolAdmin(uint256,address)",
          "isPoolManager(uint256,address)",
          "isCloneableStrategy(address)",
          "getStrategy(uint256)",
          "getPercentFee()",
          "getBaseFee()",
          "getTreasury()",
          "getRegistry()",
          "getPool(uint256)",
          "getFeeDenominator()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IRegistry.sol:IRegistry": {
        "src": "contracts/core/interfaces/IRegistry.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getProfileById(bytes32)",
          "getProfileByAnchor(address)",
          "isOwnerOrMemberOfProfile(bytes32,address)",
          "isOwnerOfProfile(bytes32,address)",
          "isMemberOfProfile(bytes32,address)",
          "createProfile(uint256,string,(uint256,string),address,address[])",
          "updateProfileName(bytes32,string)",
          "updateProfileMetadata(bytes32,(uint256,string))",
          "updateProfilePendingOwner(bytes32,address)",
          "acceptProfileOwnership(bytes32)",
          "addMembers(bytes32,address[])",
          "removeMembers(bytes32,address[])",
          "recoverFunds(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IStrategy.sol:IStrategy": {
        "src": "contracts/core/interfaces/IStrategy.sol:98",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "isValidAllocator(address)",
          "isPoolActive()",
          "getPoolAmount()",
          "increasePoolAmount(uint256)",
          "getRecipientStatus(address)",
          "getPayouts(address[],bytes[])",
          "initialize(uint256,bytes)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Errors.sol:Errors": {
        "src": "contracts/core/libraries/Errors.sol:111",
        "version": {
          "withMetadata": "3b14e39cf9b7c76bfc83f1463d6a9d115c0dba9aefe884e8bc0aef89703fceab",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Native.sol:Native": {
        "src": "contracts/core/libraries/Native.sol:26",
        "version": {
          "withMetadata": "84f1d3b2379ad8aba90d16a039e414d876f56a3bd71fc949ea254df70f3ef7ad",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Transfer.sol:Transfer": {
        "src": "contracts/core/libraries/Transfer.sol:96",
        "version": {
          "withMetadata": "d8a0604caf656e245d0361303296079229b9f334647c32578633be036ca75bff",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [
          "contracts/core/libraries/Native.sol:Native"
        ],
        "libraries": [
          "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "contracts/core/libraries/utils/SafeTransferLib.sol:12",
        "version": {
          "withMetadata": "b8aeb8b62cd50e969db8d39acd4613c9f0fb4499cb99dcae179d81b2a96b67c1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/BaseStrategy.sol:BaseStrategy": {
        "src": "contracts/strategies/BaseStrategy.sol:111",
        "inherit": [
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "getPoolAmount()",
          "isPoolActive()",
          "getRecipientStatus(address)",
          "increasePoolAmount(uint256)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)",
          "getPayouts(address[],bytes[])",
          "isValidAllocator(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:129"
          },
          {
            "kind": "state-variable-immutable",
            "name": "allo",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "strategyId",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACI.sol:QVMACI": {
        "src": "contracts/strategies/qv-maci/QVMACI.sol:121",
        "version": {
          "withMetadata": "314e6e7607d247ff6c191214f0ac36eb034f791a86cf81e3f2aae317a0052d76",
          "withoutMetadata": "aeaa3344331530349079168e894e08a00a79c799034c748858019285524e81e0",
          "linkedWithoutMetadata": "aeaa3344331530349079168e894e08a00a79c799034c748858019285524e81e0"
        },
        "inherit": [
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase",
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "(address,string,address)",
          "initialize(uint256,bytes)",
          "signup((uint256,uint256))",
          "register(address,bytes)",
          "publishTallyHash(string)",
          "finalize(uint256,uint256,uint256,uint256)",
          "_addTallyResult(uint256,uint256,uint256[][],uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACI",
            "src": "contracts/strategies/qv-maci/QVMACI.sol:159"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:118"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:120"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:124"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:127"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:133"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:135"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:140"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:143"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)8347",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:147"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Recipient)10416_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:182"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:191"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:195"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:202"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:126"
            },
            {
              "label": "_maci",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "_pollContracts",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(PollContracts)4851_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "isFinalized",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "coordinator",
              "offset": 1,
              "slot": "22",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:130"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "23",
              "type": "t_struct(PubKey)16117_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:133"
            },
            {
              "label": "tallyHash",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:134"
            },
            {
              "label": "totalTallyResults",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)8347": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)8360": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)8360)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)10416_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)8360,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)8616_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PollContracts)4851_storage": {
              "label": "struct ClonableMACI.PollContracts",
              "members": [
                {
                  "label": "poll",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageProcessor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tally",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "subsidy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PubKey)16117_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)10416_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)8616_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)8360",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase": {
        "src": "contracts/strategies/qv-maci/QVMACIBase.sol:113",
        "inherit": [
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "addAllocator(address)",
          "removeAllocator(address)",
          "getVoiceCredits(address,bytes)",
          "reviewRecipients(address[],enum IStrategy.Status[])",
          "withdraw(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACIBase",
            "src": "contracts/strategies/qv-maci/QVMACIBase.sol:227"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:118"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:120"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:124"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:127"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:133"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:135"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:140"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:143"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)8347",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:147"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Recipient)10416_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:182"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:191"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:195"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:202"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)8347": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)8360": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)8360)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)10416_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)8360,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)8360))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)8360,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)8616_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)10416_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)8616_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)8360",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants": {
        "src": "contracts/strategies/qv-maci/interfaces/Contrants.sol:15",
        "version": {
          "withMetadata": "7b5fa7e628663bfac0c51a15eaa6e28f60d70c8774d37e55aaf695c77514f959",
          "withoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155",
          "linkedWithoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Poll.sol:Poll": {
        "src": "maci-contracts/contracts/Poll.sol:18",
        "version": {
          "withMetadata": "999668ea7b5abbb352324da0f8e8c4eae5b08efc1826a484160b70a6c15c9065",
          "withoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8",
          "linkedWithoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 711,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4909,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 6593,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 4589,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 5762,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Poll",
            "src": "maci-contracts/contracts/Poll.sol:90"
          },
          {
            "kind": "state-variable-immutable",
            "name": "coordinatorPubKeyHash",
            "src": "maci-contracts/contracts/Poll.sol:28"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployTime",
            "src": "maci-contracts/contracts/Poll.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "duration",
            "src": "maci-contracts/contracts/Poll.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:22"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PubKey)16117_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:25"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:31"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "10",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:40"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:49"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:52"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:56"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(MaxValues)16149_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:59"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(TreeDepths)16144_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:62"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "17",
              "type": "t_struct(ExtContracts)16159_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)15074": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)13860": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)13165": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)16159_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)13860",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)15074",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)13165",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)16149_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)16117_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)16144_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Tally.sol:Tally": {
        "src": "maci-contracts/contracts/Tally.sol:17",
        "version": {
          "withMetadata": "2e6c76c7af63a78976cf4d82fbb854333c26e57fc3ae62298c89e3172791d66e",
          "withoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732",
          "linkedWithoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2612,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3861,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2292,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3614,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tally",
            "src": "maci-contracts/contracts/Tally.sol:57"
          },
          {
            "kind": "state-variable-immutable",
            "name": "verifier",
            "src": "maci-contracts/contracts/Tally.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vkRegistry",
            "src": "maci-contracts/contracts/Tally.sol:40"
          },
          {
            "kind": "state-variable-immutable",
            "name": "poll",
            "src": "maci-contracts/contracts/Tally.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "messageProcessor",
            "src": "maci-contracts/contracts/Tally.sol:42"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:32"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:34"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/TopupCredit.sol:TopupCredit": {
        "src": "maci-contracts/contracts/TopupCredit.sol:10",
        "version": {
          "withMetadata": "46febaec1d74c7a99513449864f7bd74c965009ab4c4c64940a49a0e50a7e5cb",
          "withoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8",
          "linkedWithoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "airdropTo(address,uint256)",
          "airdrop(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TopupCredit",
            "src": "maci-contracts/contracts/TopupCredit.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Hasher.sol:Hasher": {
        "src": "maci-contracts/contracts/crypto/Hasher.sol:12",
        "version": {
          "withMetadata": "f2a70a6757a8ed77941c15734fb12586a2ba22821be1dbc120aa4722ba2a2720",
          "withoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941",
          "linkedWithoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [
          "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3",
          "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4",
          "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5",
          "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
        ],
        "methods": [
          "sha256Hash(uint256[])",
          "hash2(uint256[2])",
          "hash3(uint256[3])",
          "hash4(uint256[4])",
          "hash5(uint256[5])",
          "hashLeftRight(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 605,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 721,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 285,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 663,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Pairing.sol:Pairing": {
        "src": "maci-contracts/contracts/crypto/Pairing.sol:25",
        "version": {
          "withMetadata": "393f04c886f91cd971a48a32dfe3a350aa7e5ab8384990816aa433fe2c28e10d",
          "withoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d",
          "linkedWithoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3": {
        "src": "maci-contracts/contracts/crypto/PoseidonT3.sol:5",
        "version": {
          "withMetadata": "91f7ec78acb1a1ed0228912980666efc400f1ef4a5403a61deae78e461b2431f",
          "withoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8",
          "linkedWithoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4": {
        "src": "maci-contracts/contracts/crypto/PoseidonT4.sol:5",
        "version": {
          "withMetadata": "608ff887bc7e496544cadad4f55d2ea88a3cf449b868b4a85df0877c371d6b95",
          "withoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003",
          "linkedWithoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5": {
        "src": "maci-contracts/contracts/crypto/PoseidonT5.sol:5",
        "version": {
          "withMetadata": "e657f512ebf553f6235790cfc80dbaa0a9a664ae8c1987dca8bd88da86b749df",
          "withoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896",
          "linkedWithoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[4])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6": {
        "src": "maci-contracts/contracts/crypto/PoseidonT6.sol:5",
        "version": {
          "withMetadata": "e94ad6d62a7638d2a0cd708452849ad086facf01921159f2168793977182b2f7",
          "withoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f",
          "linkedWithoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[5])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon": {
        "src": "maci-contracts/contracts/crypto/SnarkCommon.sol:8",
        "version": {
          "withMetadata": "15043801d6b8dc58a9d2225352550c5ef47cae3aece254de5d051e3db62fc077",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants": {
        "src": "maci-contracts/contracts/crypto/SnarkConstants.sol:7",
        "version": {
          "withMetadata": "a99ebb944bc49f0a41026990fdf94effdb41f75f306c12447780ecac6201ec11",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:SignUpGatekeeper": {
        "src": "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setMaciInstance(address)",
          "register(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:InitialVoiceCreditProxy": {
        "src": "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVoiceCredits(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMACI.sol:IMACI": {
        "src": "maci-contracts/contracts/interfaces/IMACI.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stateTreeDepth()",
          "getStateAqRoot()",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "numSignUps()",
          "stateAq()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor": {
        "src": "maci-contracts/contracts/interfaces/IMessageProcessor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "processingComplete()",
          "sbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IPoll.sol:IPoll": {
        "src": "maci-contracts/contracts/interfaces/IPoll.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "numSignUpsAndMessages()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "stateAqMerged()",
          "treeDepths()",
          "maxValues()",
          "extContracts()",
          "coordinatorPubKeyHash()",
          "currentSbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVerifier.sol:IVerifier": {
        "src": "maci-contracts/contracts/interfaces/IVerifier.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verify(uint256[8],((uint256,uint256),(uint256[2],uint256[2]),(uint256[2],uint256[2]),(uint256[2],uint256[2]),struct Pairing.G1Point[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVkRegistry.sol:IVkRegistry": {
        "src": "maci-contracts/contracts/interfaces/IVkRegistry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTallyVk(uint256,uint256,uint256)",
          "getProcessVk(uint256,uint256,uint256,uint256)",
          "getSubsidyVk(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueue.sol:AccQueue": {
        "src": "maci-contracts/contracts/trees/AccQueue.sol:13",
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueue",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:91"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subDepth",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "hashLength",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subTreeCapacity",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14095_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14095_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14095_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:13",
        "inherit": [
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinary",
            "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14095_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14095_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14095_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:AccQueueQuinaryBlankSl": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:11",
        "version": {
          "withMetadata": "9f58a66e34863112ec379152afe6dfa7d3689373e90a9efe71ec96ae1414465b",
          "withoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9",
          "linkedWithoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary",
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4429,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 4565,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3903,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4507,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinaryBlankSl",
            "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:14"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)14095_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)14095_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "370",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)14095_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots": {
        "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EmptyBallotRoots",
            "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities": {
        "src": "maci-contracts/contracts/utilities/CommonUtilities.sol:10",
        "version": {
          "withMetadata": "cc5488ab471427a6b5a6c7860da5bd90f981c61d6cb24df9728697d4bd905f4e",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs": {
        "src": "maci-contracts/contracts/utilities/DomainObjs.sol:7",
        "version": {
          "withMetadata": "6794785e87775348237a88e965f87a6f7da43fb9b5e6dd6e5f79215b91549624",
          "withoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef",
          "linkedWithoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Params.sol:Params": {
        "src": "maci-contracts/contracts/utilities/Params.sol:13",
        "version": {
          "withMetadata": "87b59559ccec4c9a435a05f5f01fa978028e2f312c99096e6de3e5d0af42af31",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Utilities.sol:Utilities": {
        "src": "maci-contracts/contracts/utilities/Utilities.sol:12",
        "version": {
          "withMetadata": "398d1f083f864d6766ff94b8e7944efbfcde178af2fde27dd7e4fe80b2ca6d6c",
          "withoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b",
          "linkedWithoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "hashStateLeaf(((uint256,uint256),uint256,uint256))",
          "padAndHashMessage(uint256[2],uint256)",
          "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256))"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1159,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 1339,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 839,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1281,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:19",
        "version": {
          "withMetadata": "10d6db350d94a6f05b9903eaaf5af7b460ebaa3794641c04accaec0c72448564",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "10cb14c440247d756acf55ed33bb23722b666cdd6f4a64c514f6c5c61d1b89fb",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:11",
        "version": {
          "withMetadata": "daed0b57f26f146ab3f9560dc8da3fe68d946042f49dbcd438f3245722c24c80",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "33a85730b669b8ab67522e14b81ae0b8ef2ecf4f367fa62692cdc216ccae250f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:16",
        "version": {
          "withMetadata": "b07bb173284e0969d0121d1d025e4555ae36512e66e660dec9056e9ec626acc1",
          "withoutMetadata": "5c7f155534d10a5c47f74861648096c85fe552dcaefd3a7a91829483944e3afe",
          "linkedWithoutMetadata": "5c7f155534d10a5c47f74861648096c85fe552dcaefd3a7a91829483944e3afe"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "onERC1155Received(address,address,uint256,uint256,bytes)",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver": {
        "src": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "305f47de5f3d607e3c9d2cded3ec1d78534a6553df25862423d5d90b99dcee5c",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "b5d023b643e1dcc2e13c444cf05e0a6873142aab0fc4760fe3a14f622976b8bc",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:14",
        "version": {
          "withMetadata": "3ef0350218af0757dcd8e3fa0691f4af76dd680b598ac40f37dd1a4a7e2412e7",
          "withoutMetadata": "1652f93be6fb3b2edc18e377aab10bb0937d02c731d4d32082f5080d83d3c487",
          "linkedWithoutMetadata": "1652f93be6fb3b2edc18e377aab10bb0937d02c731d4d32082f5080d83d3c487"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "4b9bcc7783a36cf797b97628345acacf3fc2f4e7a181154b34ef1fd124030bff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Multicall.sol:Multicall": {
        "src": "@openzeppelin/contracts/utils/Multicall.sol:13",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "multicall(bytes[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:ClonableAccQueueQuinaryBlankSl": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:12",
        "version": {
          "withMetadata": "eae7a26677159c8236a1d7653ebb9f1ed8e9996253203268772644fc97c15aff",
          "withoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381",
          "linkedWithoutMetadata": "a7376e2c1c4cdd40419cdb09f43953aa2b8695cc729d71370cfd31368b864381"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3462,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3598,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2936,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3540,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:47"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:53"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:56"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:59"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:63"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)4200_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:66"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)4200_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:69"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:72"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:75"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:78"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:81"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:85"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:88"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryBlankSl",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryBlankSl.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)4200_storage": {
              "label": "struct ClonableAccQueueQuinaryBlankSl.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:ClonableAccQueueQuinaryMaci": {
        "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:12",
        "version": {
          "withMetadata": "27b6b60f5a10600e577b4c69c28bb7c0c5fa8b6708fecc531f63e80be1496463",
          "withoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42",
          "linkedWithoutMetadata": "7c08dfff3f22a8a69765dd564e22464662bd1c98688b752b1b8631749eedcc42"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "initialize(uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()",
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3461,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3597,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2935,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3539,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            },
            {
              "label": "subDepth",
              "offset": 0,
              "slot": "134",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:46"
            },
            {
              "label": "hashLength",
              "offset": 0,
              "slot": "135",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:52"
            },
            {
              "label": "subTreeCapacity",
              "offset": 0,
              "slot": "136",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:55"
            },
            {
              "label": "isBinary",
              "offset": 0,
              "slot": "137",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:58"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "138",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:62"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "139",
              "type": "t_struct(Queue)5457_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:65"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "304",
              "type": "t_struct(Queue)5457_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:68"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "469",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:71"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "470",
              "type": "t_array(t_uint256)33_storage",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:74"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:77"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "503",
              "type": "t_bool",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:80"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "504",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:84"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "505",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:87"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "506",
              "type": "t_uint256",
              "contract": "ClonableAccQueueQuinaryMaci",
              "src": "contracts/ClonableMaciContracts/ClonableAccQueueQuinaryMaci.sol:90"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)5457_storage": {
              "label": "struct ClonableAccQueueQuinaryMaci.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACI.sol:ClonableMACI": {
        "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:19",
        "version": {
          "withMetadata": "0fb1570b8bccc5523e7d5cea90e6fbbd17bcd56c8e35b7c1924035c6c0a85247",
          "withoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341",
          "linkedWithoutMetadata": "aad76bde539b19b195c0abda5dea6f7ec203feb972f56ff37be08ac2a2f25341"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/interfaces/IMACI.sol:IMACI"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address)",
          "signUp((uint256,uint256),bytes,bytes)",
          "deployPoll(uint256,(uint256,uint256))",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "getStateAqRoot()",
          "getPoll(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3794,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3994,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3474,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3936,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:23"
            },
            {
              "label": "nextPollId",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:36"
            },
            {
              "label": "polls",
              "offset": 0,
              "slot": "103",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:39"
            },
            {
              "label": "subtreesMerged",
              "offset": 0,
              "slot": "104",
              "type": "t_bool",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:42"
            },
            {
              "label": "numSignUps",
              "offset": 0,
              "slot": "105",
              "type": "t_uint256",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:45"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(TreeDepths)23452_storage",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:47"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:49"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:51"
            },
            {
              "label": "topupCredit",
              "offset": 0,
              "slot": "109",
              "type": "t_contract(TopupCredit)20401",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:54"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "110",
              "type": "t_contract(ClonableMACIFactory)7666",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:57"
            },
            {
              "label": "stateAq",
              "offset": 0,
              "slot": "111",
              "type": "t_contract(AccQueue)22382",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:61"
            },
            {
              "label": "signUpGatekeeper",
              "offset": 0,
              "slot": "112",
              "type": "t_contract(SignUpGatekeeper)21034",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:65"
            },
            {
              "label": "initialVoiceCreditProxy",
              "offset": 0,
              "slot": "113",
              "type": "t_contract(InitialVoiceCreditProxy)21049",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:69"
            },
            {
              "label": "coordinator",
              "offset": 0,
              "slot": "114",
              "type": "t_address",
              "contract": "ClonableMACI",
              "src": "contracts/ClonableMaciContracts/ClonableMACI.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)22382": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(ClonableMACIFactory)7666": {
              "label": "contract ClonableMACIFactory",
              "numberOfBytes": "20"
            },
            "t_contract(InitialVoiceCreditProxy)21049": {
              "label": "contract InitialVoiceCreditProxy",
              "numberOfBytes": "20"
            },
            "t_contract(SignUpGatekeeper)21034": {
              "label": "contract SignUpGatekeeper",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)20401": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(TreeDepths)23452_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:ClonableMACIFactory": {
        "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:19",
        "version": {
          "withMetadata": "c64f12ce9359bceed757d880572bc7ae4ab89bedc6b27144a49202e1be7d4c6f",
          "withoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24",
          "linkedWithoutMetadata": "383c1d6051425e035f08c132cf135c1c017592691b7e4c66e05ce63a5d538f24"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [
          "initialize(uint8,(uint8,uint8,uint8,uint8),address,address,address,address,address,address,address,address)",
          "createMACI(address,address,address,address)",
          "deployPoll(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,address)",
          "deployTally(address,address,address,address,address)",
          "deployMessageProcessor(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "stateTreeDepth",
              "offset": 0,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:24"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(TreeDepths)23452_storage",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:26"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "103",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:28"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "104",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:30"
            },
            {
              "label": "clonableMaciImplementation",
              "offset": 0,
              "slot": "105",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:33"
            },
            {
              "label": "AccQueueQuinaryBlankSlImplementation",
              "offset": 0,
              "slot": "106",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:35"
            },
            {
              "label": "AccQueueQuinaryMaciImplementation",
              "offset": 0,
              "slot": "107",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:37"
            },
            {
              "label": "PollImplementation",
              "offset": 0,
              "slot": "108",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:39"
            },
            {
              "label": "TallyImplementation",
              "offset": 0,
              "slot": "109",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:41"
            },
            {
              "label": "MessageProcessorImplementation",
              "offset": 0,
              "slot": "110",
              "type": "t_address",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:43"
            },
            {
              "label": "deployNonce",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonableMACIFactory",
              "src": "contracts/ClonableMaciContracts/ClonableMACIFactory.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(TreeDepths)23452_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:ClonableMessageProcessor": {
        "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:20",
        "version": {
          "withMetadata": "d5777b5b621101b123c34e6170058aeb7ff80671b3a48a5f2266d8e5e781ed15",
          "withoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21",
          "linkedWithoutMetadata": "0e03841f29afb1ab3b0384132aaba98c1077e2fdc77c6d27154c5fb32695eb21"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "processMessages(uint256,uint256[8])",
          "genProcessMessagesPublicInputHash(uint256,uint256,uint256,uint256,uint256,uint256,uint8,uint8)",
          "genProcessMessagesPackedVals(uint256,uint256,uint256,uint8,uint8)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1586,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 2933,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1266,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1664,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "processingComplete",
              "offset": 0,
              "slot": "101",
              "type": "t_bool",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:36"
            },
            {
              "label": "numBatchesProcessed",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:39"
            },
            {
              "label": "currentMessageBatchIndex",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:44"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "104",
              "type": "t_uint256",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:47"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IPoll)21251",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:49"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IVerifier)21326",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:50"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IVkRegistry)21373",
              "contract": "ClonableMessageProcessor",
              "src": "contracts/ClonableMaciContracts/ClonableMessageProcessor.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IPoll)21251": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)21326": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)21373": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonablePoll.sol:ClonablePoll": {
        "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:19",
        "version": {
          "withMetadata": "fe93179cac166488c1ac31bb530aff0d66ae727afb6c61791d88016b10a6147d",
          "withoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447",
          "linkedWithoutMetadata": "562a948707f95f349cfac1fa92a3bc41c368d34effd09739fcaecc4787936447"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initialize(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 3243,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 5328,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2941,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4554,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "106",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:23"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "107",
              "type": "t_struct(PubKey)23425_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:26"
            },
            {
              "label": "coordinatorPubKeyHash",
              "offset": 0,
              "slot": "109",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:29"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "110",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:32"
            },
            {
              "label": "deployTime",
              "offset": 0,
              "slot": "111",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:35"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "112",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:38"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "113",
              "type": "t_bool",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:41"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "114",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:50"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "115",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:53"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "116",
              "type": "t_uint256",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:57"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "117",
              "type": "t_struct(MaxValues)23457_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:60"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "119",
              "type": "t_struct(TreeDepths)23452_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:63"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "120",
              "type": "t_struct(ExtContracts)23467_storage",
              "contract": "ClonablePoll",
              "src": "contracts/ClonableMaciContracts/ClonablePoll.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)22382": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)21096": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)20401": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)23467_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)21096",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)22382",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)20401",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)23457_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)23425_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)23452_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/ClonableMaciContracts/ClonableTally.sol:ClonableTally": {
        "src": "contracts/ClonableMaciContracts/ClonableTally.sol:19",
        "version": {
          "withMetadata": "70d8e4b6e11b21d67e3d0ec4899de25fbd78801fa7211ab06b1ac59c5097912e",
          "withoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05",
          "linkedWithoutMetadata": "7585da6d21b77fc6e7195f59851ff5f2319128f8d63591e93cbd1b4634fefb05"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2098,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3284,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 1778,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3037,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:34"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "102",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:36"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "103",
              "type": "t_uint256",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:39"
            },
            {
              "label": "verifier",
              "offset": 0,
              "slot": "104",
              "type": "t_contract(IVerifier)21326",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:41"
            },
            {
              "label": "vkRegistry",
              "offset": 0,
              "slot": "105",
              "type": "t_contract(IVkRegistry)21373",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:42"
            },
            {
              "label": "poll",
              "offset": 0,
              "slot": "106",
              "type": "t_contract(IPoll)21251",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:43"
            },
            {
              "label": "messageProcessor",
              "offset": 0,
              "slot": "107",
              "type": "t_contract(IMessageProcessor)21130",
              "contract": "ClonableTally",
              "src": "contracts/ClonableMaciContracts/ClonableTally.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IMessageProcessor)21130": {
              "label": "contract IMessageProcessor",
              "numberOfBytes": "20"
            },
            "t_contract(IPoll)21251": {
              "label": "contract IPoll",
              "numberOfBytes": "20"
            },
            "t_contract(IVerifier)21326": {
              "label": "contract IVerifier",
              "numberOfBytes": "20"
            },
            "t_contract(IVkRegistry)21373": {
              "label": "contract IVkRegistry",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/Allo.sol:Allo": {
        "src": "contracts/core/Allo.sol:99",
        "version": {
          "withMetadata": "3ce3d4dbc4149cb10eee89d1a154bf2dd83be6fef80917a3fe61586ce54eb628",
          "withoutMetadata": "b2677d3cfab4d817c6090a9a9e02a76f2a55775a3924fb3c016ba7e98fcf8deb",
          "linkedWithoutMetadata": "b2677d3cfab4d817c6090a9a9e02a76f2a55775a3924fb3c016ba7e98fcf8deb"
        },
        "inherit": [
          "contracts/core/libraries/Errors.sol:Errors",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/core/libraries/Ownable.sol:Ownable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IAllo.sol:IAllo"
        ],
        "libraries": [
          "contracts/core/libraries/Clone.sol:Clone"
        ],
        "methods": [
          "initialize(address,address,address payable,uint256,uint256)",
          "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "updatePoolMetadata(uint256,(uint256,string))",
          "updateRegistry(address)",
          "updateTreasury(address payable)",
          "updatePercentFee(uint256)",
          "updateBaseFee(uint256)",
          "addToCloneableStrategies(address)",
          "removeFromCloneableStrategies(address)",
          "addPoolManager(uint256,address)",
          "removePoolManager(uint256,address)",
          "recoverFunds(address,address)",
          "registerRecipient(uint256,bytes)",
          "batchRegisterRecipient(uint256[],bytes[])",
          "fundPool(uint256,uint256)",
          "allocate(uint256,bytes)",
          "batchAllocate(uint256[],bytes[])",
          "distribute(uint256,address[],bytes)",
          "getFeeDenominator()",
          "isPoolAdmin(uint256,address)",
          "isPoolManager(uint256,address)",
          "getStrategy(uint256)",
          "getPercentFee()",
          "getBaseFee()",
          "getTreasury()",
          "getRegistry()",
          "isCloneableStrategy(address)",
          "getPool(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
            },
            {
              "label": "percentFee",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:126"
            },
            {
              "label": "baseFee",
              "offset": 0,
              "slot": "202",
              "type": "t_uint256",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:141"
            },
            {
              "label": "_poolIndex",
              "offset": 0,
              "slot": "203",
              "type": "t_uint256",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:144"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "204",
              "type": "t_address_payable",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:145"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "205",
              "type": "t_contract(IRegistry)12522",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:145"
            },
            {
              "label": "_nonces",
              "offset": 0,
              "slot": "206",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:146"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "207",
              "type": "t_mapping(t_uint256,t_struct(Pool)11979_storage)",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:147"
            },
            {
              "label": "cloneableStrategies",
              "offset": 0,
              "slot": "208",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Allo",
              "src": "contracts/core/Allo.sol:149"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IRegistry)12522": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(IStrategy)12689": {
              "label": "contract IStrategy",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Pool)11979_storage)": {
              "label": "mapping(uint256 => struct IAllo.Pool)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)12824_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Pool)11979_storage": {
              "label": "struct IAllo.Pool",
              "members": [
                {
                  "label": "profileId",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "strategy",
                  "type": "t_contract(IStrategy)12689",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)12824_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "managerRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/Anchor.sol:Anchor": {
        "src": "contracts/core/Anchor.sol:92",
        "version": {
          "withMetadata": "6db7800ed6881bd51e97f447dd15d4fcad016d532b2bfd28f548080c4b1ecf23",
          "withoutMetadata": "b273f025f6d130a1d56ea6b3c5be2c6659b1e8ba02fda6d57742f5fad5aab5f0",
          "linkedWithoutMetadata": "b273f025f6d130a1d56ea6b3c5be2c6659b1e8ba02fda6d57742f5fad5aab5f0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol:ERC1155Holder",
          "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol:ERC1155Receiver",
          "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol:IERC1155Receiver",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol:ERC721Holder",
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver"
        ],
        "libraries": [],
        "methods": [
          "(bytes32,address)",
          "execute(address,uint256,bytes)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Anchor",
            "src": "contracts/core/Anchor.sol:92"
          },
          {
            "kind": "state-variable-immutable",
            "name": "registry",
            "src": "contracts/core/Anchor.sol:92"
          },
          {
            "kind": "state-variable-immutable",
            "name": "profileId",
            "src": "contracts/core/Anchor.sol:92"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/Registry.sol:Registry": {
        "src": "contracts/core/Registry.sol:102",
        "version": {
          "withMetadata": "e118b87794cc5d3e59fb1910fe8b0326607eec51dae2acc6bc4c1b14f1288720",
          "withoutMetadata": "7559b3b2c2b87d4de4f863572c77708bcf5a01cc7661c01076655e9623c7f932",
          "linkedWithoutMetadata": "7559b3b2c2b87d4de4f863572c77708bcf5a01cc7661c01076655e9623c7f932"
        },
        "inherit": [
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "contracts/core/libraries/Native.sol:Native",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable",
          "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol:IAccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/core/interfaces/IRegistry.sol:IRegistry"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "getProfileById(bytes32)",
          "getProfileByAnchor(address)",
          "createProfile(uint256,string,(uint256,string),address,address[])",
          "updateProfileName(bytes32,string)",
          "updateProfileMetadata(bytes32,(uint256,string))",
          "isOwnerOrMemberOfProfile(bytes32,address)",
          "isOwnerOfProfile(bytes32,address)",
          "isMemberOfProfile(bytes32,address)",
          "updateProfilePendingOwner(bytes32,address)",
          "acceptProfileOwnership(bytes32)",
          "addMembers(bytes32,address[])",
          "removeMembers(bytes32,address[])",
          "recoverFunds(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC165Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "AccessControlUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
            },
            {
              "label": "anchorToProfileId",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_address,t_bytes32)",
              "contract": "Registry",
              "src": "contracts/core/Registry.sol:108"
            },
            {
              "label": "profilesById",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_bytes32,t_struct(Profile)12349_storage)",
              "contract": "Registry",
              "src": "contracts/core/Registry.sol:110"
            },
            {
              "label": "profileIdToPendingOwner",
              "offset": 0,
              "slot": "153",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "Registry",
              "src": "contracts/core/Registry.sol:112"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bytes32)": {
              "label": "mapping(address => bytes32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Profile)12349_storage)": {
              "label": "mapping(bytes32 => struct IRegistry.Profile)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)12824_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Profile)12349_storage": {
              "label": "struct IRegistry.Profile",
              "members": [
                {
                  "label": "id",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nonce",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)12824_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "anchor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(RoleData)34_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IAllo.sol:IAllo": {
        "src": "contracts/core/interfaces/IAllo.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address payable,uint256,uint256)",
          "createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "createPool(bytes32,address,bytes,address,uint256,(uint256,string),address[])",
          "updatePoolMetadata(uint256,(uint256,string))",
          "updateRegistry(address)",
          "updateTreasury(address payable)",
          "updatePercentFee(uint256)",
          "updateBaseFee(uint256)",
          "addToCloneableStrategies(address)",
          "removeFromCloneableStrategies(address)",
          "addPoolManager(uint256,address)",
          "removePoolManager(uint256,address)",
          "recoverFunds(address,address)",
          "registerRecipient(uint256,bytes)",
          "batchRegisterRecipient(uint256[],bytes[])",
          "fundPool(uint256,uint256)",
          "allocate(uint256,bytes)",
          "batchAllocate(uint256[],bytes[])",
          "distribute(uint256,address[],bytes)",
          "isPoolAdmin(uint256,address)",
          "isPoolManager(uint256,address)",
          "isCloneableStrategy(address)",
          "getStrategy(uint256)",
          "getPercentFee()",
          "getBaseFee()",
          "getTreasury()",
          "getRegistry()",
          "getPool(uint256)",
          "getFeeDenominator()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IAnchor.sol:IAnchor": {
        "src": "contracts/core/interfaces/IAnchor.sol:31",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IRegistry.sol:IRegistry": {
        "src": "contracts/core/interfaces/IRegistry.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getProfileById(bytes32)",
          "getProfileByAnchor(address)",
          "isOwnerOrMemberOfProfile(bytes32,address)",
          "isOwnerOfProfile(bytes32,address)",
          "isMemberOfProfile(bytes32,address)",
          "createProfile(uint256,string,(uint256,string),address,address[])",
          "updateProfileName(bytes32,string)",
          "updateProfileMetadata(bytes32,(uint256,string))",
          "updateProfilePendingOwner(bytes32,address)",
          "acceptProfileOwnership(bytes32)",
          "addMembers(bytes32,address[])",
          "removeMembers(bytes32,address[])",
          "recoverFunds(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/interfaces/IStrategy.sol:IStrategy": {
        "src": "contracts/core/interfaces/IStrategy.sol:98",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "isValidAllocator(address)",
          "isPoolActive()",
          "getPoolAmount()",
          "increasePoolAmount(uint256)",
          "getRecipientStatus(address)",
          "getPayouts(address[],bytes[])",
          "initialize(uint256,bytes)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Clone.sol:Clone": {
        "src": "contracts/core/libraries/Clone.sol:37",
        "version": {
          "withMetadata": "ead5d11ce28afc81347646d2217d5410e2d920079c43eaddc95185b4fb589ca1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/proxy/ClonesUpgradeable.sol:ClonesUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Errors.sol:Errors": {
        "src": "contracts/core/libraries/Errors.sol:111",
        "version": {
          "withMetadata": "3b14e39cf9b7c76bfc83f1463d6a9d115c0dba9aefe884e8bc0aef89703fceab",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Native.sol:Native": {
        "src": "contracts/core/libraries/Native.sol:26",
        "version": {
          "withMetadata": "84f1d3b2379ad8aba90d16a039e414d876f56a3bd71fc949ea254df70f3ef7ad",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Ownable.sol:Ownable": {
        "src": "contracts/core/libraries/Ownable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "renounceOwnership()",
          "requestOwnershipHandover()",
          "cancelOwnershipHandover()",
          "completeOwnershipHandover(address)",
          "owner()",
          "ownershipHandoverExpiresAt(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/Transfer.sol:Transfer": {
        "src": "contracts/core/libraries/Transfer.sol:96",
        "version": {
          "withMetadata": "d8a0604caf656e245d0361303296079229b9f334647c32578633be036ca75bff",
          "withoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520",
          "linkedWithoutMetadata": "0f445b7f1bc1045cb38d74dcc9afab9829e1879c468e3f97f16eac035bbbb520"
        },
        "inherit": [
          "contracts/core/libraries/Native.sol:Native"
        ],
        "libraries": [
          "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/tokens/ERC20.sol:ERC20": {
        "src": "contracts/core/libraries/tokens/ERC20.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/utils/CREATE3.sol:CREATE3": {
        "src": "contracts/core/libraries/utils/CREATE3.sol:8",
        "version": {
          "withMetadata": "29346b018efcd32fc14272e936fc6104cb8327cc0415b7dc028f53fabbd871d3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/utils/Clone.sol:Clone": {
        "src": "contracts/core/libraries/utils/Clone.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/core/libraries/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "contracts/core/libraries/utils/SafeTransferLib.sol:12",
        "version": {
          "withMetadata": "b8aeb8b62cd50e969db8d39acd4613c9f0fb4499cb99dcae179d81b2a96b67c1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/factory/ContractFactory.sol:ContractFactory": {
        "src": "contracts/factory/ContractFactory.sol:106",
        "version": {
          "withMetadata": "166ef7aecda8276f20d3485580cd410e003cfc9c9f3db3b836aded22377e73c0",
          "withoutMetadata": "0cd9f0333d78bdd2af9498d5d4adeec01b0e328ca33e6873216a037ccc439f13",
          "linkedWithoutMetadata": "0cd9f0333d78bdd2af9498d5d4adeec01b0e328ca33e6873216a037ccc439f13"
        },
        "inherit": [],
        "libraries": [
          "contracts/core/libraries/utils/CREATE3.sol:CREATE3"
        ],
        "methods": [
          "()",
          "deploy(string,string,bytes)",
          "setDeployer(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ContractFactory",
            "src": "contracts/factory/ContractFactory.sol:118"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "usedSalts",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "ContractFactory",
              "src": "contracts/factory/ContractFactory.sol:118"
            },
            {
              "label": "isDeployer",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ContractFactory",
              "src": "contracts/factory/ContractFactory.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/CreateStrategy.sol:CreateStrategy": {
        "src": "contracts/mock/CreateStrategy.sol:17",
        "version": {
          "withMetadata": "6811c70d5de06a80480a3326f016aa1a0ee66e6193382a68ec7f249918af471c",
          "withoutMetadata": "45e6692eabf460fdacb72682cd75decdc20ac5087c8c5c49e00a8afa68ce8e29",
          "linkedWithoutMetadata": "45e6692eabf460fdacb72682cd75decdc20ac5087c8c5c49e00a8afa68ce8e29"
        },
        "inherit": [],
        "libraries": [
          "contracts/core/libraries/Clone.sol:Clone"
        ],
        "methods": [
          "(address,address,address,address)",
          "createQVMaciPool((bool,bool,uint256,uint64,uint64,uint64,uint64,uint256),address,(uint256,uint256))",
          "getTime()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CreateStrategy",
            "src": "contracts/mock/CreateStrategy.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_metadata",
            "src": "contracts/mock/CreateStrategy.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "Allo",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IAllo)12314",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:19"
            },
            {
              "label": "Anchor",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IAnchor)12330",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:21"
            },
            {
              "label": "Registry",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IRegistry)12522",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:23"
            },
            {
              "label": "_maciFactory",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:25"
            },
            {
              "label": "strategy_implementation",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:28"
            },
            {
              "label": "_profileId",
              "offset": 0,
              "slot": "5",
              "type": "t_bytes32",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:30"
            },
            {
              "label": "deployNonce",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:33"
            },
            {
              "label": "_managers",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:35"
            },
            {
              "label": "poolID",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:37"
            },
            {
              "label": "_metadata",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(Metadata)12824_storage",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:39"
            },
            {
              "label": "strategies",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:41"
            },
            {
              "label": "strategyToMaciParams",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_struct(MaciParams)14649_storage)",
              "contract": "CreateStrategy",
              "src": "contracts/mock/CreateStrategy.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IAllo)12314": {
              "label": "contract IAllo",
              "numberOfBytes": "20"
            },
            "t_contract(IAnchor)12330": {
              "label": "contract IAnchor",
              "numberOfBytes": "20"
            },
            "t_contract(IRegistry)12522": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(MaciParams)14649_storage)": {
              "label": "mapping(address => struct CreateStrategy.MaciParams)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(MaciParams)14649_storage": {
              "label": "struct CreateStrategy.MaciParams",
              "members": [
                {
                  "label": "coordinator",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "coordinatorPubKey",
                  "type": "t_struct(PubKey)23425_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "maciFactory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Metadata)12824_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)23425_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/dai.sol:Context": {
        "src": "contracts/mock/dai.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/dai.sol:ERC20": {
        "src": "contracts/mock/dai.sol:256",
        "version": {
          "withMetadata": "3977909e6a8a9e5a276f3414fb81f5d83af3540d7acf8e0ca11d4e8863192075",
          "withoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc",
          "linkedWithoutMetadata": "b88954434c1323bef884c814f309755275a30d00fbd7290dedb8d43b871933fc"
        },
        "inherit": [
          "contracts/mock/dai.sol:IERC20Metadata",
          "contracts/mock/dai.sol:IERC20",
          "contracts/mock/dai.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/mock/dai.sol:272"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:257"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:259"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:261"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:263"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:264"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/dai.sol:ERC20Burnable": {
        "src": "contracts/mock/dai.sol:596",
        "inherit": [
          "contracts/mock/dai.sol:ERC20",
          "contracts/mock/dai.sol:IERC20Metadata",
          "contracts/mock/dai.sol:IERC20",
          "contracts/mock/dai.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:257"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:259"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:261"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:263"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:264"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/dai.sol:IERC20": {
        "src": "contracts/mock/dai.sol:123",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/dai.sol:IERC20Metadata": {
        "src": "contracts/mock/dai.sol:205",
        "inherit": [
          "contracts/mock/dai.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/dai.sol:Ownable": {
        "src": "contracts/mock/dai.sol:49",
        "inherit": [
          "contracts/mock/dai.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/mock/dai.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/mock/dai.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/mock/dai.sol:dai": {
        "src": "contracts/mock/dai.sol:627",
        "version": {
          "withMetadata": "fdb843c9a6231d6eb92c25e408f6fad21e2be748c6892509be4df88ced9eb7a8",
          "withoutMetadata": "87f4919f5a00fc4e380a745b31d39b6ad495257a21628d2bf1bbf3c9c81ef784",
          "linkedWithoutMetadata": "87f4919f5a00fc4e380a745b31d39b6ad495257a21628d2bf1bbf3c9c81ef784"
        },
        "inherit": [
          "contracts/mock/dai.sol:Ownable",
          "contracts/mock/dai.sol:ERC20Burnable",
          "contracts/mock/dai.sol:ERC20",
          "contracts/mock/dai.sol:IERC20Metadata",
          "contracts/mock/dai.sol:IERC20",
          "contracts/mock/dai.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "dai",
            "src": "contracts/mock/dai.sol:628"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:257"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:259"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:261"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:263"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/mock/dai.sol:264"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/mock/dai.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/BaseStrategy.sol:BaseStrategy": {
        "src": "contracts/strategies/BaseStrategy.sol:111",
        "inherit": [
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "getAllo()",
          "getPoolId()",
          "getStrategyId()",
          "getPoolAmount()",
          "isPoolActive()",
          "getRecipientStatus(address)",
          "increasePoolAmount(uint256)",
          "registerRecipient(bytes,address)",
          "allocate(bytes,address)",
          "distribute(address[],bytes,address)",
          "getPayouts(address[],bytes[])",
          "isValidAllocator(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:129"
          },
          {
            "kind": "state-variable-immutable",
            "name": "allo",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          },
          {
            "kind": "state-variable-immutable",
            "name": "strategyId",
            "src": "contracts/strategies/BaseStrategy.sol:117"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACI.sol:QVMACI": {
        "src": "contracts/strategies/qv-maci/QVMACI.sol:121",
        "version": {
          "withMetadata": "b3c61d7b13228362c618a697c874efb0d9c277599198692145bada45da3f3c2a",
          "withoutMetadata": "1c115e8e0aae25d31d573e346fe05580c239445ab1def765007ac15acdb3e72e",
          "linkedWithoutMetadata": "1c115e8e0aae25d31d573e346fe05580c239445ab1def765007ac15acdb3e72e"
        },
        "inherit": [
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase",
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "(address,string,address)",
          "initialize(uint256,bytes)",
          "signup((uint256,uint256))",
          "register(address,bytes)",
          "publishTallyHash(string)",
          "finalize(uint256,uint256,uint256,uint256)",
          "_addTallyResult(uint256,uint256,uint256[][],uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACI",
            "src": "contracts/strategies/qv-maci/QVMACI.sol:159"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:118"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:120"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:124"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:127"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:133"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:135"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:140"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:143"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)12522",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:147"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Recipient)17049_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:182"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)12535,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:191"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)12535)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:195"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:202"
            },
            {
              "label": "maciFactory",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:126"
            },
            {
              "label": "_maci",
              "offset": 0,
              "slot": "17",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "_pollContracts",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(PollContracts)6714_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "isFinalized",
              "offset": 0,
              "slot": "22",
              "type": "t_bool",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:128"
            },
            {
              "label": "coordinator",
              "offset": 1,
              "slot": "22",
              "type": "t_address",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:130"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "23",
              "type": "t_struct(PubKey)23425_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:133"
            },
            {
              "label": "tallyHash",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:134"
            },
            {
              "label": "totalTallyResults",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "QVMACI",
              "src": "contracts/strategies/qv-maci/QVMACI.sol:135"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)12522": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)12535": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)12535)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)12535)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)12535,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)17049_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)12535,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)12535))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)12535,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)12824_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PollContracts)6714_storage": {
              "label": "struct ClonableMACI.PollContracts",
              "members": [
                {
                  "label": "poll",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageProcessor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tally",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "subsidy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PubKey)23425_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)17049_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)12824_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)12535",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/QVMACIBase.sol:QVMACIBase": {
        "src": "contracts/strategies/qv-maci/QVMACIBase.sol:113",
        "inherit": [
          "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants",
          "@openzeppelin/contracts/utils/Multicall.sol:Multicall",
          "contracts/strategies/BaseStrategy.sol:BaseStrategy",
          "contracts/core/libraries/Errors.sol:Errors",
          "contracts/core/libraries/Transfer.sol:Transfer",
          "contracts/core/libraries/Native.sol:Native",
          "contracts/core/interfaces/IStrategy.sol:IStrategy"
        ],
        "libraries": [],
        "methods": [
          "addAllocator(address)",
          "removeAllocator(address)",
          "getVoiceCredits(address,bytes)",
          "reviewRecipients(address[],enum IStrategy.Status[])",
          "withdraw(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "QVMACIBase",
            "src": "contracts/strategies/qv-maci/QVMACIBase.sol:227"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "poolActive",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:118"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "poolAmount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseStrategy",
              "src": "contracts/strategies/BaseStrategy.sol:121"
            },
            {
              "label": "totalRecipientVotes",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:118"
            },
            {
              "label": "reviewThreshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:120"
            },
            {
              "label": "registrationStartTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:124"
            },
            {
              "label": "registrationEndTime",
              "offset": 8,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationStartTime",
              "offset": 16,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:126"
            },
            {
              "label": "allocationEndTime",
              "offset": 24,
              "slot": "5",
              "type": "t_uint64",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:127"
            },
            {
              "label": "registryGating",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:131"
            },
            {
              "label": "metadataRequired",
              "offset": 1,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:133"
            },
            {
              "label": "distributionStarted",
              "offset": 2,
              "slot": "6",
              "type": "t_bool",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:135"
            },
            {
              "label": "maxVoiceCreditsPerAllocator",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:140"
            },
            {
              "label": "allowedAllocators",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:143"
            },
            {
              "label": "_registry",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(IRegistry)12522",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:147"
            },
            {
              "label": "recipients",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Recipient)17049_storage)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:182"
            },
            {
              "label": "paidOut",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:187"
            },
            {
              "label": "reviewsByStatus",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)12535,t_uint256)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:191"
            },
            {
              "label": "reviewedByManager",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)12535)))",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:195"
            },
            {
              "label": "recipientIndexToAddress",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:200"
            },
            {
              "label": "recipientIdToIndex",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "QVMACIBase",
              "src": "contracts/strategies/qv-maci/QVMACIBase.sol:202"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IRegistry)12522": {
              "label": "contract IRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(Status)12535": {
              "label": "enum IStrategy.Status",
              "members": [
                "None",
                "Pending",
                "Accepted",
                "Rejected",
                "Appealed",
                "InReview",
                "Canceled"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_enum(Status)12535)": {
              "label": "mapping(address => enum IStrategy.Status)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)12535)))": {
              "label": "mapping(address => mapping(uint256 => mapping(address => enum IStrategy.Status)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_enum(Status)12535,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(enum IStrategy.Status => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Recipient)17049_storage)": {
              "label": "mapping(address => struct QVMACIBase.Recipient)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(Status)12535,t_uint256)": {
              "label": "mapping(enum IStrategy.Status => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_enum(Status)12535))": {
              "label": "mapping(uint256 => mapping(address => enum IStrategy.Status))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(Status)12535,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum IStrategy.Status => uint256))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Metadata)12824_storage": {
              "label": "struct Metadata",
              "members": [
                {
                  "label": "protocol",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pointer",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Recipient)17049_storage": {
              "label": "struct QVMACIBase.Recipient",
              "members": [
                {
                  "label": "totalVotesReceived",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "useRegistryAnchor",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "recipientAddress",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "metadata",
                  "type": "t_struct(Metadata)12824_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "recipientStatus",
                  "type": "t_enum(Status)12535",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "tallyVerified",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "4"
                },
                {
                  "label": "applicationId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/strategies/qv-maci/interfaces/Contrants.sol:Contrants": {
        "src": "contracts/strategies/qv-maci/interfaces/Contrants.sol:15",
        "version": {
          "withMetadata": "7b5fa7e628663bfac0c51a15eaa6e28f60d70c8774d37e55aaf695c77514f959",
          "withoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155",
          "linkedWithoutMetadata": "4afff38bddb77b19ecc9a7d9e1c602016aa29b6f2113df076252e720b492d155"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/MACI.sol:MACI": {
        "src": "maci-contracts/contracts/MACI.sol:19",
        "version": {
          "withMetadata": "a8d878c90d9734821e73252c457493370475689c485e7d12f6cdad4e403ecbde",
          "withoutMetadata": "9d15041d6e72fecae48ddb0772d16aaa220781ae61d3547028ebd8750a21120d",
          "linkedWithoutMetadata": "9d15041d6e72fecae48ddb0772d16aaa220781ae61d3547028ebd8750a21120d"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params",
          "maci-contracts/contracts/interfaces/IMACI.sol:IMACI"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address,uint8)",
          "signUp((uint256,uint256),bytes,bytes)",
          "deployPoll(uint256,(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,bool)",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "getStateAqRoot()",
          "getPoll(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 501,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4277,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 13993,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 5670,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 14129,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3957,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 13467,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4419,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 14071,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MACI",
            "src": "maci-contracts/contracts/MACI.sol:121"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stateTreeDepth",
            "src": "maci-contracts/contracts/MACI.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "topupCredit",
            "src": "maci-contracts/contracts/MACI.sol:48"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pollFactory",
            "src": "maci-contracts/contracts/MACI.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "messageProcessorFactory",
            "src": "maci-contracts/contracts/MACI.sol:54"
          },
          {
            "kind": "state-variable-immutable",
            "name": "tallyFactory",
            "src": "maci-contracts/contracts/MACI.sol:57"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subsidyFactory",
            "src": "maci-contracts/contracts/MACI.sol:60"
          },
          {
            "kind": "state-variable-immutable",
            "name": "stateAq",
            "src": "maci-contracts/contracts/MACI.sol:64"
          },
          {
            "kind": "state-variable-immutable",
            "name": "signUpGatekeeper",
            "src": "maci-contracts/contracts/MACI.sol:68"
          },
          {
            "kind": "state-variable-immutable",
            "name": "initialVoiceCreditProxy",
            "src": "maci-contracts/contracts/MACI.sol:72"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "nextPollId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "MACI",
              "src": "maci-contracts/contracts/MACI.sol:36"
            },
            {
              "label": "polls",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "MACI",
              "src": "maci-contracts/contracts/MACI.sol:39"
            },
            {
              "label": "subtreesMerged",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "MACI",
              "src": "maci-contracts/contracts/MACI.sol:42"
            },
            {
              "label": "numSignUps",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MACI",
              "src": "maci-contracts/contracts/MACI.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Poll.sol:Poll": {
        "src": "maci-contracts/contracts/Poll.sol:18",
        "version": {
          "withMetadata": "999668ea7b5abbb352324da0f8e8c4eae5b08efc1826a484160b70a6c15c9065",
          "withoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8",
          "linkedWithoutMetadata": "b86f1f548e93ab2beedd58fb92af64f7549632c08593328796aeefbc6ee0f4b8"
        },
        "inherit": [
          "maci-contracts/contracts/interfaces/IPoll.sol:IPoll",
          "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "maci-contracts/contracts/utilities/Utilities.sol:Utilities",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/Params.sol:Params"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),(address,address,address))",
          "init()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "publishMessageBatch(struct DomainObjs.Message[],struct DomainObjs.PubKey[])",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "numSignUpsAndMessages()"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 711,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4909,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 6593,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 4589,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 5762,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Poll",
            "src": "maci-contracts/contracts/Poll.sol:90"
          },
          {
            "kind": "state-variable-immutable",
            "name": "coordinatorPubKeyHash",
            "src": "maci-contracts/contracts/Poll.sol:28"
          },
          {
            "kind": "state-variable-immutable",
            "name": "deployTime",
            "src": "maci-contracts/contracts/Poll.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "duration",
            "src": "maci-contracts/contracts/Poll.sol:37"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            },
            {
              "label": "isInit",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:22"
            },
            {
              "label": "coordinatorPubKey",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(PubKey)23425_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:25"
            },
            {
              "label": "mergedStateRoot",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:31"
            },
            {
              "label": "stateAqMerged",
              "offset": 0,
              "slot": "10",
              "type": "t_bool",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:40"
            },
            {
              "label": "currentSbCommitment",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:49"
            },
            {
              "label": "numMessages",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:52"
            },
            {
              "label": "numSignups",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:56"
            },
            {
              "label": "maxValues",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(MaxValues)23457_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:59"
            },
            {
              "label": "treeDepths",
              "offset": 0,
              "slot": "16",
              "type": "t_struct(TreeDepths)23452_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:62"
            },
            {
              "label": "extContracts",
              "offset": 0,
              "slot": "17",
              "type": "t_struct(ExtContracts)23467_storage",
              "contract": "Poll",
              "src": "maci-contracts/contracts/Poll.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AccQueue)22382": {
              "label": "contract AccQueue",
              "numberOfBytes": "20"
            },
            "t_contract(IMACI)21096": {
              "label": "contract IMACI",
              "numberOfBytes": "20"
            },
            "t_contract(TopupCredit)20401": {
              "label": "contract TopupCredit",
              "numberOfBytes": "20"
            },
            "t_struct(ExtContracts)23467_storage": {
              "label": "struct Params.ExtContracts",
              "members": [
                {
                  "label": "maci",
                  "type": "t_contract(IMACI)21096",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageAq",
                  "type": "t_contract(AccQueue)22382",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "topupCredit",
                  "type": "t_contract(TopupCredit)20401",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(MaxValues)23457_storage": {
              "label": "struct Params.MaxValues",
              "members": [
                {
                  "label": "maxMessages",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maxVoteOptions",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PubKey)23425_storage": {
              "label": "struct DomainObjs.PubKey",
              "members": [
                {
                  "label": "x",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "y",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TreeDepths)23452_storage": {
              "label": "struct Params.TreeDepths",
              "members": [
                {
                  "label": "intStateTreeDepth",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "messageTreeSubDepth",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "messageTreeDepth",
                  "type": "t_uint8",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "voteOptionTreeDepth",
                  "type": "t_uint8",
                  "offset": 3,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/Tally.sol:Tally": {
        "src": "maci-contracts/contracts/Tally.sol:17",
        "version": {
          "withMetadata": "2e6c76c7af63a78976cf4d82fbb854333c26e57fc3ae62298c89e3172791d66e",
          "withoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732",
          "linkedWithoutMetadata": "249bc9fb33439753df86625ee999c37aaefaa6e9ed69ba00d1673e87c8f3e732"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities",
          "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "genTallyVotesPackedVals(uint256,uint256,uint256)",
          "isTallied()",
          "genTallyVotesPublicInputHash(uint256,uint256,uint256,uint256)",
          "updateSbCommitment()",
          "tallyVotes(uint256,uint256[8])",
          "verifyTallyProof(uint256[8],uint256,uint256,uint256,uint256)",
          "verifySpentVoiceCredits(uint256,uint256,uint256,uint256)",
          "verifyPerVOSpentVoiceCredits(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)",
          "verifyTallyResult(uint256,uint256,uint256[][],uint256,uint8,uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 2612,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 3861,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 2292,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 3614,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Tally",
            "src": "maci-contracts/contracts/Tally.sol:57"
          },
          {
            "kind": "state-variable-immutable",
            "name": "verifier",
            "src": "maci-contracts/contracts/Tally.sol:39"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vkRegistry",
            "src": "maci-contracts/contracts/Tally.sol:40"
          },
          {
            "kind": "state-variable-immutable",
            "name": "poll",
            "src": "maci-contracts/contracts/Tally.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "messageProcessor",
            "src": "maci-contracts/contracts/Tally.sol:42"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "tallyCommitment",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:32"
            },
            {
              "label": "tallyBatchNum",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:34"
            },
            {
              "label": "sbCommitment",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Tally",
              "src": "maci-contracts/contracts/Tally.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/TopupCredit.sol:TopupCredit": {
        "src": "maci-contracts/contracts/TopupCredit.sol:10",
        "version": {
          "withMetadata": "46febaec1d74c7a99513449864f7bd74c965009ab4c4c64940a49a0e50a7e5cb",
          "withoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8",
          "linkedWithoutMetadata": "5a223ceb4eb672d92f3165dc03fcff8e3a49468efb439e9d6610f340c17cffa8"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "airdropTo(address,uint256)",
          "airdrop(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TopupCredit",
            "src": "maci-contracts/contracts/TopupCredit.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Hasher.sol:Hasher": {
        "src": "maci-contracts/contracts/crypto/Hasher.sol:12",
        "version": {
          "withMetadata": "f2a70a6757a8ed77941c15734fb12586a2ba22821be1dbc120aa4722ba2a2720",
          "withoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941",
          "linkedWithoutMetadata": "8eeb35900cf4b67ad87ca2fe461434c8ac7b906040ff3481fdcf7330a2500941"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [
          "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3",
          "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4",
          "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5",
          "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6"
        ],
        "methods": [
          "sha256Hash(uint256[])",
          "hash2(uint256[2])",
          "hash3(uint256[3])",
          "hash4(uint256[4])",
          "hash5(uint256[5])",
          "hashLeftRight(uint256,uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 605,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 721,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 285,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 663,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/Pairing.sol:Pairing": {
        "src": "maci-contracts/contracts/crypto/Pairing.sol:25",
        "version": {
          "withMetadata": "393f04c886f91cd971a48a32dfe3a350aa7e5ab8384990816aa433fe2c28e10d",
          "withoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d",
          "linkedWithoutMetadata": "4623bbd4a6c6383aad5d9fb4ec2d3adc752aa059e6904b971f7961c0c8ac1e4d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT3.sol:PoseidonT3": {
        "src": "maci-contracts/contracts/crypto/PoseidonT3.sol:5",
        "version": {
          "withMetadata": "91f7ec78acb1a1ed0228912980666efc400f1ef4a5403a61deae78e461b2431f",
          "withoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8",
          "linkedWithoutMetadata": "8ab02fd9230d4fc9e559d9aeada84a4e9e02c512472a9ee49137760a3b3bcba8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[2])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT4.sol:PoseidonT4": {
        "src": "maci-contracts/contracts/crypto/PoseidonT4.sol:5",
        "version": {
          "withMetadata": "608ff887bc7e496544cadad4f55d2ea88a3cf449b868b4a85df0877c371d6b95",
          "withoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003",
          "linkedWithoutMetadata": "652a08009eb7b8cdba9e0ce3f19f87968e79bd5f5406e3ab1a1316a81dc76003"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[3])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT5.sol:PoseidonT5": {
        "src": "maci-contracts/contracts/crypto/PoseidonT5.sol:5",
        "version": {
          "withMetadata": "e657f512ebf553f6235790cfc80dbaa0a9a664ae8c1987dca8bd88da86b749df",
          "withoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896",
          "linkedWithoutMetadata": "d98080fbebd88916bfaae195c069249d30577f8d9d71a1506dbbeef2868c5896"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[4])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/PoseidonT6.sol:PoseidonT6": {
        "src": "maci-contracts/contracts/crypto/PoseidonT6.sol:5",
        "version": {
          "withMetadata": "e94ad6d62a7638d2a0cd708452849ad086facf01921159f2168793977182b2f7",
          "withoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f",
          "linkedWithoutMetadata": "768aa3fa54cec5d055c9184da0bed766a7925bd082301b4a87c2286cfc92686f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "poseidon(uint256[5])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkCommon.sol:SnarkCommon": {
        "src": "maci-contracts/contracts/crypto/SnarkCommon.sol:8",
        "version": {
          "withMetadata": "15043801d6b8dc58a9d2225352550c5ef47cae3aece254de5d051e3db62fc077",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants": {
        "src": "maci-contracts/contracts/crypto/SnarkConstants.sol:7",
        "version": {
          "withMetadata": "a99ebb944bc49f0a41026990fdf94effdb41f75f306c12447780ecac6201ec11",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:SignUpGatekeeper": {
        "src": "maci-contracts/contracts/gatekeepers/SignUpGatekeeper.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setMaciInstance(address)",
          "register(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:InitialVoiceCreditProxy": {
        "src": "maci-contracts/contracts/initialVoiceCreditProxy/InitialVoiceCreditProxy.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getVoiceCredits(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMACI.sol:IMACI": {
        "src": "maci-contracts/contracts/interfaces/IMACI.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "stateTreeDepth()",
          "getStateAqRoot()",
          "mergeStateAqSubRoots(uint256,uint256)",
          "mergeStateAq(uint256)",
          "numSignUps()",
          "stateAq()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMPFactory.sol:IMessageProcessorFactory": {
        "src": "maci-contracts/contracts/interfaces/IMPFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deploy(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IMessageProcessor.sol:IMessageProcessor": {
        "src": "maci-contracts/contracts/interfaces/IMessageProcessor.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "processingComplete()",
          "sbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IPoll.sol:IPoll": {
        "src": "maci-contracts/contracts/interfaces/IPoll.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "numSignUpsAndMessages()",
          "topup(uint256,uint256)",
          "publishMessage((uint256,uint256[10]),(uint256,uint256))",
          "mergeMaciStateAqSubRoots(uint256,uint256)",
          "mergeMaciStateAq(uint256)",
          "mergeMessageAqSubRoots(uint256)",
          "mergeMessageAq()",
          "getDeployTimeAndDuration()",
          "stateAqMerged()",
          "treeDepths()",
          "maxValues()",
          "extContracts()",
          "coordinatorPubKeyHash()",
          "currentSbCommitment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IPollFactory.sol:IPollFactory": {
        "src": "maci-contracts/contracts/interfaces/IPollFactory.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deploy(uint256,(uint256,uint256),(uint8,uint8,uint8,uint8),(uint256,uint256),address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/ITallySubsidyFactory.sol:ITallySubsidyFactory": {
        "src": "maci-contracts/contracts/interfaces/ITallySubsidyFactory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deploy(address,address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVerifier.sol:IVerifier": {
        "src": "maci-contracts/contracts/interfaces/IVerifier.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verify(uint256[8],((uint256,uint256),(uint256[2],uint256[2]),(uint256[2],uint256[2]),(uint256[2],uint256[2]),struct Pairing.G1Point[]),uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/interfaces/IVkRegistry.sol:IVkRegistry": {
        "src": "maci-contracts/contracts/interfaces/IVkRegistry.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTallyVk(uint256,uint256,uint256)",
          "getProcessVk(uint256,uint256,uint256,uint256)",
          "getSubsidyVk(uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueue.sol:AccQueue": {
        "src": "maci-contracts/contracts/trees/AccQueue.sol:13",
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)",
          "enqueue(uint256)",
          "fill()",
          "insertSubTree(uint256)",
          "calcMinHeight()",
          "mergeSubRoots(uint256)",
          "merge(uint256)",
          "getSubRoot(uint256)",
          "getSmallSRTroot()",
          "getMainRoot(uint256)",
          "getSrIndices()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueue",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:91"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subDepth",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:29"
          },
          {
            "kind": "state-variable-immutable",
            "name": "hashLength",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:35"
          },
          {
            "kind": "state-variable-immutable",
            "name": "subTreeCapacity",
            "src": "maci-contracts/contracts/trees/AccQueue.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)21403_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)21403_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)21403_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:13",
        "inherit": [
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "hashLevelLeaf(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinary",
            "src": "maci-contracts/contracts/trees/AccQueueQuinary.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)21403_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)21403_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)21403_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:AccQueueQuinaryBlankSl": {
        "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:11",
        "version": {
          "withMetadata": "9f58a66e34863112ec379152afe6dfa7d3689373e90a9efe71ec96ae1414465b",
          "withoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9",
          "linkedWithoutMetadata": "17fde73acdcfaf26cadd0abbd0af31c3bc62c27f57e061819f5cd7e2fb77dfb9"
        },
        "inherit": [
          "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros",
          "maci-contracts/contracts/trees/AccQueueQuinary.sol:AccQueueQuinary",
          "maci-contracts/contracts/trees/AccQueue.sol:AccQueue",
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 4429,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 4565,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 3903,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 4507,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccQueueQuinaryBlankSl",
            "src": "maci-contracts/contracts/trees/AccQueueQuinaryBlankSl.sol:14"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "isBinary",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:41"
            },
            {
              "label": "currentSubtreeIndex",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:45"
            },
            {
              "label": "leafQueue",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Queue)21403_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:48"
            },
            {
              "label": "subRootQueue",
              "offset": 0,
              "slot": "167",
              "type": "t_struct(Queue)21403_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:51"
            },
            {
              "label": "subRoots",
              "offset": 0,
              "slot": "332",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:54"
            },
            {
              "label": "mainRoots",
              "offset": 0,
              "slot": "333",
              "type": "t_array(t_uint256)33_storage",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:57"
            },
            {
              "label": "subTreesMerged",
              "offset": 0,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:60"
            },
            {
              "label": "treeMerged",
              "offset": 1,
              "slot": "366",
              "type": "t_bool",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:63"
            },
            {
              "label": "smallSRTroot",
              "offset": 0,
              "slot": "367",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:67"
            },
            {
              "label": "nextSubRootIndex",
              "offset": 0,
              "slot": "368",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:70"
            },
            {
              "label": "numLeaves",
              "offset": 0,
              "slot": "369",
              "type": "t_uint256",
              "contract": "AccQueue",
              "src": "maci-contracts/contracts/trees/AccQueue.sol:73"
            },
            {
              "label": "zeros",
              "offset": 0,
              "slot": "370",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_array(t_uint256)4_storage)33_storage": {
              "label": "uint256[4][33]",
              "numberOfBytes": "4224"
            },
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_array(t_uint256)4_storage": {
              "label": "uint256[4]",
              "numberOfBytes": "128"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Queue)21403_storage": {
              "label": "struct AccQueue.Queue",
              "members": [
                {
                  "label": "levels",
                  "type": "t_array(t_array(t_uint256)4_storage)33_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "indices",
                  "type": "t_array(t_uint256)33_storage",
                  "offset": 0,
                  "slot": "132"
                }
              ],
              "numberOfBytes": "5280"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/EmptyBallotRoots.sol:EmptyBallotRoots": {
        "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EmptyBallotRoots",
            "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "emptyBallotRoots",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)5_storage",
              "contract": "EmptyBallotRoots",
              "src": "maci-contracts/contracts/trees/EmptyBallotRoots.sol:21"
            }
          ],
          "types": {
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryBlankSl.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:MerkleZeros": {
        "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MerkleZeros",
            "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zeros",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_uint256)33_storage",
              "contract": "MerkleZeros",
              "src": "maci-contracts/contracts/trees/zeros/MerkleQuinaryMaci.sol:5"
            }
          ],
          "types": {
            "t_array(t_uint256)33_storage": {
              "label": "uint256[33]",
              "numberOfBytes": "1056"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/CommonUtilities.sol:CommonUtilities": {
        "src": "maci-contracts/contracts/utilities/CommonUtilities.sol:10",
        "version": {
          "withMetadata": "cc5488ab471427a6b5a6c7860da5bd90f981c61d6cb24df9728697d4bd905f4e",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs": {
        "src": "maci-contracts/contracts/utilities/DomainObjs.sol:7",
        "version": {
          "withMetadata": "6794785e87775348237a88e965f87a6f7da43fb9b5e6dd6e5f79215b91549624",
          "withoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef",
          "linkedWithoutMetadata": "bd558d17e72d85ff3db467490b0a2cbedec8c90f40884151b6f41abfa08c1cef"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Params.sol:Params": {
        "src": "maci-contracts/contracts/utilities/Params.sol:13",
        "version": {
          "withMetadata": "87b59559ccec4c9a435a05f5f01fa978028e2f312c99096e6de3e5d0af42af31",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "maci-contracts/contracts/utilities/Utilities.sol:Utilities": {
        "src": "maci-contracts/contracts/utilities/Utilities.sol:12",
        "version": {
          "withMetadata": "398d1f083f864d6766ff94b8e7944efbfcde178af2fde27dd7e4fe80b2ca6d6c",
          "withoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b",
          "linkedWithoutMetadata": "c37b4ca13170597c1b3a7a89a1579adcd5b3f95e5e4a47b6d4c729070775847b"
        },
        "inherit": [
          "maci-contracts/contracts/crypto/Hasher.sol:Hasher",
          "maci-contracts/contracts/utilities/DomainObjs.sol:DomainObjs",
          "maci-contracts/contracts/crypto/SnarkConstants.sol:SnarkConstants"
        ],
        "libraries": [],
        "methods": [
          "hashStateLeaf(((uint256,uint256),uint256,uint256))",
          "padAndHashMessage(uint256[2],uint256)",
          "hashMessageAndEncPubKey((uint256,uint256[10]),(uint256,uint256))"
        ],
        "linkReferences": [
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol",
            "name": "PoseidonT3",
            "length": 20,
            "start": 1159,
            "placeholder": "__$1540826e134b1b69b7091c82576ee3aadd$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol",
            "name": "PoseidonT4",
            "length": 20,
            "start": 1339,
            "placeholder": "__$fa059fb1da6d850ca47ea49359bfe89f78$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol",
            "name": "PoseidonT5",
            "length": 20,
            "start": 839,
            "placeholder": "__$e61c65d9562aef5fa6ab22c0f787cf1e30$__"
          },
          {
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol",
            "name": "PoseidonT6",
            "length": 20,
            "start": 1281,
            "placeholder": "__$46fbdf6658faf65265971bdad66851b86c$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "PoseidonT3",
            "src": "maci-contracts/contracts/crypto/PoseidonT3.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT4",
            "src": "maci-contracts/contracts/crypto/PoseidonT4.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT5",
            "src": "maci-contracts/contracts/crypto/PoseidonT5.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "PoseidonT6",
            "src": "maci-contracts/contracts/crypto/PoseidonT6.sol"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}